{"version":3,"file":"static/js/518.ff31517b.chunk.js","mappings":"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","sources":["components/Categories/CategoriesList/BigCategory.jsx","components/Categories/CategoriesList/CategoriesList.jsx"],"sourcesContent":["import React from 'react'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nfunction BigCategory({subcategory}) {\r\n    return (\r\n        <li>\r\n            <NavLink to={`/store/subcategory/${subcategory.id}`}>\r\n                <img src={subcategory.image} alt=\"category\" />\r\n                <div>\r\n                    <h3>{subcategory.name}</h3>\r\n                    <p>{subcategory.description}</p>\r\n                </div>\r\n            </NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport default BigCategory","import React, { useEffect, useState } from \"react\"\r\nimport { useParams, NavLink } from \"react-router-dom\"\r\n\r\nimport BigCategory from \"./BigCategory\"\r\nimport { SmallCategory } from \"./SmallCategory\"\r\n\r\nimport ProductList from \"../../Product/ScrollableProductsList/ScrollableProductList\"\r\nimport { useQuery } from \"@tanstack/react-query\"\r\nimport { getCategoryByID } from '../../../helpers/API/category-api'\r\nimport ImageLoader from \"../../ImageLoader/ImageLoader\"\r\nimport { BigLoadingDiv } from \"../../PageLoader/PageLoader\"\r\nimport NotFound from \"../../NotFound/NotFound\"\r\nimport { extractAndSortProductsFromCategory, getUniqueManufacturers } from \"../../UsefullComponents/Usefull\"\r\n\r\nfunction CategoriesList() {\r\n    const { catId } = useParams()\r\n    const [popularProducts, setPopularProducts] = useState([])\r\n    const [manufacturers, setManufacturers] = useState([])\r\n\r\n    const {\r\n        data: catData,\r\n        error: catError,\r\n        isError: isCatError,\r\n        isPending: isCatPending,\r\n        isSuccess: catSuccess,\r\n        refetch: catRefetch\r\n    } = useQuery({\r\n        queryKey: [\"categoryQuery\", catId],\r\n        queryFn: () => getCategoryByID(catId),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (catData) setPopularProducts(extractAndSortProductsFromCategory(catData))\r\n    }, [catData])\r\n\r\n    useEffect(() => {\r\n        if (popularProducts) setManufacturers(getUniqueManufacturers(popularProducts))\r\n    }, [popularProducts])\r\n\r\n    return (\r\n        <>\r\n            {\r\n                isCatPending ? (\r\n                    <BigLoadingDiv\r\n                    link={\"/store/\"}\r\n                        title={\"loading category...\"}\r\n                        message={\"you can click here to retry if it's taking too long\"}\r\n                        refetch={catRefetch}\r\n                    ></BigLoadingDiv>\r\n                ) : catSuccess && catData ? (\r\n                    <main className=\"categoriesListMain\">\r\n                        <div className=\"popularCategories\">\r\n                            <h1>{catData.name}</h1>\r\n                            <ul>\r\n                                {catData.subcategories.slice(0, 3).map((subcategory) => (\r\n                                    <BigCategory key={subcategory.id} subcategory={subcategory} />\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"smallCategoriesList\">\r\n                            <h1>More Categories</h1>\r\n                            <ul>\r\n                                {catData.subcategories.slice(3).map((subcategory) => (\r\n                                    <SmallCategory key={subcategory.id} subcategory={subcategory} />\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                        <ProductList products={popularProducts.slice(0, 10)} origin=\"popular\"></ProductList>\r\n                        <div className=\"manufacturers\">\r\n                            <h1>Manufacturers</h1>\r\n                            <ul className=\"manufacturer-logos\">\r\n                                {manufacturers.map((e) => (\r\n                                    <li key={e.id}>\r\n                                        <NavLink data-manufacturer={e.name} to={`/store/manufacturer/${e.id}`}>\r\n                                            <ImageLoader\r\n                                                alt={e.name}\r\n                                                url={e.image}\r\n                                                backupUrl=\"/store/assets/imgs/404/category404.png\"\r\n                                                backupAlt={e.name || 'Manufacturer'}\r\n                                            ></ImageLoader>\r\n                                        </NavLink>\r\n                                    </li>\r\n                                ))}\r\n                            </ul>\r\n                        </div>\r\n                    </main>\r\n                ) : isCatError ? (\r\n                    <NotFound\r\n                    link={\"/store/\"}\r\n                        title={\"dont have that one\"}\r\n                        message={catError?.message}\r\n                    ></NotFound>\r\n                ) : (<></>)\r\n            }\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CategoriesList\r\n"],"names":["_ref","subcategory","_jsx","children","_jsxs","NavLink","to","concat","id","src","image","alt","name","description","catId","useParams","popularProducts","setPopularProducts","useState","manufacturers","setManufacturers","data","catData","error","catError","isError","isCatError","isPending","isCatPending","isSuccess","catSuccess","refetch","catRefetch","useQuery","queryKey","queryFn","getCategoryByID","useEffect","extractAndSortProductsFromCategory","getUniqueManufacturers","_Fragment","BigLoadingDiv","link","title","message","className","subcategories","slice","map","BigCategory","SmallCategory","ProductList","products","origin","e","ImageLoader","url","backupUrl","backupAlt","NotFound"],"sourceRoot":""}