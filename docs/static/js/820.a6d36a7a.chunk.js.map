{"version":3,"file":"static/js/820.a6d36a7a.chunk.js","mappings":"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","sources":["components/UserSettings/PictureFolder/PPicture.jsx","components/UserSettings/InfoFolder/UInfo.jsx","components/UserSettings/AddressFolder/ADInfo.jsx","components/UserSettings/PasswordFolder/PInfo.jsx","components/UserSettings/UserSettings.jsx"],"sourcesContent":["import React, { useState } from \"react\"\r\nimport ImageLoader from \"../../ImageLoader/ImageLoader\"\r\nimport { dataURLtoFile } from \"../../UsefullComponents/Usefull\"\r\nimport { useDispatch } from \"react-redux\"\r\nimport { setNotificationData, setShowNotification } from \"../../../store/slices/notificationSlice/notificationSlice\"\r\n\r\nfunction ProfilePicture({ image, userInfo, handleInputEdit }) {\r\n  const dispatch = useDispatch()\r\n  const [drag, setDrag] = useState(false)\r\n\r\n  const handleDragOver = () => {\r\n    setDrag(true)\r\n  }\r\n\r\n  const handleDragLeave = () => {\r\n    setDrag(false)\r\n  }\r\n\r\n  const [fileInputKey, setFileInputKey] = useState(Date.now()); // Add a key state\r\n\r\n  const handleFileInputChange = (e) => {\r\n    const file = e.target.files[0]\r\n    if (file && file.type.startsWith(\"image/\")) {\r\n      const img = new Image()\r\n      img.onload = function () {\r\n        if (this.width >= 600 && this.width <= 1024 && this.height >= 600 && this.height <= 1024) {\r\n          const reader = new FileReader();\r\n          reader.onloadend = function () {\r\n            const base64String = reader.result.replace(\"data:\", \"\").replace(/^.+,/, \"\");\r\n            handleInputEdit({ name: 'image', value: { base64: base64String, name: file.name } })\r\n          }\r\n          reader.readAsDataURL(file);\r\n        } else {\r\n          setFileInputKey(Date.now()) // Reset the key state to clear the file input\r\n          dispatch(setNotificationData({ title: 'Image not compatible', success: '', error: 'Please select an image of width and height between 600 and 1024 pixels.' }))\r\n          dispatch(setShowNotification(true))\r\n        }\r\n      }\r\n      img.src = URL.createObjectURL(file)\r\n    }\r\n  }\r\n\r\n  const handleCancel = () => {\r\n    handleInputEdit({ name: 'image', value: '' }); // Clear the image\r\n    setFileInputKey(Date.now()); // Reset the key state to clear the file input\r\n  }\r\n\r\n  return (\r\n    <div className=\"photoUploader\">\r\n      <div className=\"imageDiv\">\r\n        <ImageLoader\r\n          url={image.url}\r\n          alt={image.alt}\r\n          backupUrl=\"/assets/imgs/404/user404.png\"\r\n          backupAlt=\"User 404\"\r\n        ></ImageLoader>\r\n      </div>\r\n      <div\r\n        className={`image-uploader ${userInfo?.image?.file && 'noBorder'} ${drag && 'dragged'}`}\r\n        onDrop={handleFileInputChange}\r\n        onDragOver={handleDragOver}\r\n        onDragLeave={handleDragLeave}\r\n      >\r\n        {userInfo?.image?.base64 && <img src={URL.createObjectURL(dataURLtoFile('data:image/png;base64,' + userInfo?.image?.base64, userInfo?.image?.name))} alt=\"Selected Img\" />}\r\n        {!userInfo?.image?.base64 &&\r\n          (\r\n            <>\r\n              <h4>Drag and drop an image file here</h4>\r\n              <p>Max size x1024, Min size x600</p>\r\n            </>\r\n          )\r\n        }\r\n        {!userInfo?.image?.base64 && <input key={fileInputKey} type=\"file\" accept=\"image/*\" onChange={handleFileInputChange} />}\r\n        {userInfo?.image?.base64 && <button onClick={handleCancel}>Cancel</button>}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfilePicture\r\n\r\n","function UserInfoForm({user, userInfo, handleInputEdit}) {\r\n  return (\r\n    <form className=\"dataForm userInfoForm\" onSubmit={(e) => { e.preventDefault() }}>\r\n      <div className=\"inputContainer fullname\">\r\n        <p>First name: {user.firstName}</p>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            maxLength=\"30\"\r\n            minLength=\"2\"\r\n            pattern=\"^[a-zA-Z\\\\s ]*$\"\r\n            name=\"firstName\"\r\n            value={userInfo.firstName}\r\n            onChange={handleInputEdit}\r\n            required\r\n            placeholder=\"\"\r\n          ></input>\r\n          <label htmlFor=\"firstName\">First Name</label>\r\n        </div>\r\n        <p>Last name: {user.lastName}</p>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            maxLength=\"30\"\r\n            minLength=\"2\"\r\n            pattern=\"^[a-zA-Z\\\\s ]*$\"\r\n            name=\"lastName\"\r\n            required\r\n            value={userInfo.lastName}\r\n            onChange={handleInputEdit}\r\n            placeholder=\"\"\r\n          ></input>\r\n          <label htmlFor=\"lastName\">Last Name</label>\r\n        </div>\r\n      </div>\r\n      <div className=\"inputContainer ePhone\">\r\n        <p>Email address: {user.email}</p>\r\n        <div>\r\n        <input\r\n            type=\"text\"\r\n            maxLength=\"40\"\r\n            minLength=\"9\"\r\n            name=\"email\"\r\n            pattern=\"^[a-zA-Z0-9+._]+@[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\r\n            value={userInfo.email}\r\n            onChange={handleInputEdit}\r\n            required\r\n            placeholder=\"\"\r\n          ></input>\r\n\r\n          <label htmlFor=\"email\">Email</label>\r\n        </div>\r\n        <p>Phone number: {user.phoneNumber}</p>\r\n        <div>\r\n          <input\r\n            name=\"phoneNumber\"\r\n            type=\"tel\"\r\n            pattern=\"^0\\d+$\"\r\n            maxLength={9}\r\n            minLength={9}\r\n            inputMode=\"numeric\"\r\n            value={userInfo.phoneNumber}\r\n            onChange={handleInputEdit}\r\n            required\r\n            placeholder=\"\"\r\n          ></input>\r\n          <label htmlFor=\"phoneNumber\">Phone Number</label>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default UserInfoForm\r\n","import { useSelector } from \"react-redux\"\r\n\r\nfunction AddressInfoForm({ user, userInfo, handleInputEdit }) {\r\n  const shippingArray = useSelector((state) => state.shipping.shippingArray)\r\n  return (\r\n    <form className=\"dataForm addressInfoFrom\" onSubmit={(e) => { e.preventDefault() }}>\r\n      <div className=\"inputContainer\">\r\n        <p>Address: {user.address}</p>\r\n        <div>\r\n          <input\r\n            type=\"text\"\r\n            maxLength=\"30\"\r\n            minLength=\"3\"\r\n            name=\"address\"\r\n            value={userInfo.address}\r\n            onChange={handleInputEdit}\r\n            required\r\n            placeholder=\"\"\r\n          ></input>\r\n          <label htmlFor=\"address\">Address</label>\r\n        </div>\r\n      </div>\r\n      <div className=\"inputContainer\">\r\n        <p>City: {user.city}</p>\r\n        <div className=\"city\">\r\n          <select\r\n            className=\"citySelect\"\r\n            name=\"city\"\r\n            onChange={handleInputEdit}\r\n            value={user.city}\r\n          >\r\n            {shippingArray.map((e, i) => (\r\n              <option key={i} value={e} name={e} >\r\n                {e}\r\n              </option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n      </div>\r\n      <div className=\"inputContainer\">\r\n        <p>Postal Code: {user.postalCode}</p>\r\n        <div>\r\n          <input\r\n            name=\"postalCode\"\r\n            type=\"text\"\r\n            pattern=\"[0-9]*\"\r\n            inputMode=\"numeric\"\r\n            value={userInfo.postalCode}\r\n            onChange={handleInputEdit}\r\n            required\r\n            maxLength={4}\r\n            minLength={4}\r\n            placeholder=\"\"\r\n          ></input>\r\n          <label htmlFor=\"postalCode\">Postal Code</label>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default AddressInfoForm\r\n","import React, { useState } from 'react';\r\n\r\nfunction PasswordInfoForm({handlePasswordChange, passwordInfo}) {\r\n  const [showPassword, setShowPassword] = useState(false)\r\n  const [showCpassword, setShowCpassword] = useState(false)\r\n  const [showOriginalPassword, setShowOriginalPassword] = useState(false)\r\n\r\n  return (\r\n    <form className=\"dataForm\" onSubmit={(e) => { e.preventDefault() }}>\r\n      <div className=\"inputContainer password\">\r\n        <div>\r\n          <input\r\n            type={showOriginalPassword ? \"text\" : \"password\"}\r\n            maxLength=\"25\"\r\n            minLength=\"8\"\r\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least one special character\"\r\n            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&^#\\\\$=+_\\-*\\.])[A-Za-z\\d@$!%*?&^#\\\\$=+_\\-*\\.]*$\"\r\n            name=\"originalPassword\"\r\n            required\r\n            placeholder=\"\"\r\n            value={passwordInfo.originalPassword}\r\n            onChange={handlePasswordChange}\r\n          ></input>\r\n          <label htmlFor=\"originalPassword\">Current Password</label>\r\n          <span className={showOriginalPassword ? 'active' : ''} onClick={() => setShowOriginalPassword(!showOriginalPassword)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M30.94 15.66A16.69 16.69 0 0 0 16 5A16.69 16.69 0 0 0 1.06 15.66a1 1 0 0 0 0 .68A16.69 16.69 0 0 0 16 27a16.69 16.69 0 0 0 14.94-10.66a1 1 0 0 0 0-.68ZM16 25c-5.3 0-10.9-3.93-12.93-9C5.1 10.93 10.7 7 16 7s10.9 3.93 12.93 9C26.9 21.07 21.3 25 16 25Z\" /><path fill=\"currentColor\" d=\"M16 10a6 6 0 1 0 6 6a6 6 0 0 0-6-6Zm0 10a4 4 0 1 1 4-4a4 4 0 0 1-4 4Z\" /></svg></span>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type={showPassword ? \"text\" : \"password\"}\r\n            maxLength=\"25\"\r\n            minLength=\"8\"\r\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least one special character\"\r\n            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&^#\\\\$=+_\\-*\\.])[A-Za-z\\d@$!%*?&^#\\\\$=+_\\-*\\.]*$\"\r\n            name=\"password\"\r\n            required\r\n            placeholder=\"\"\r\n            value={passwordInfo.password}\r\n            onChange={handlePasswordChange}\r\n          ></input>\r\n          <label htmlFor=\"password\">New Password</label>\r\n          <span className={showPassword ? 'active' : ''} onClick={() => setShowPassword(!showPassword)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M30.94 15.66A16.69 16.69 0 0 0 16 5A16.69 16.69 0 0 0 1.06 15.66a1 1 0 0 0 0 .68A16.69 16.69 0 0 0 16 27a16.69 16.69 0 0 0 14.94-10.66a1 1 0 0 0 0-.68ZM16 25c-5.3 0-10.9-3.93-12.93-9C5.1 10.93 10.7 7 16 7s10.9 3.93 12.93 9C26.9 21.07 21.3 25 16 25Z\" /><path fill=\"currentColor\" d=\"M16 10a6 6 0 1 0 6 6a6 6 0 0 0-6-6Zm0 10a4 4 0 1 1 4-4a4 4 0 0 1-4 4Z\" /></svg></span>\r\n        </div>\r\n        <div>\r\n          <input\r\n            type={showCpassword ? \"text\" : \"password\"}\r\n            maxLength=\"25\"\r\n            minLength=\"8\"\r\n            title=\"Must contain at least one number and one uppercase and lowercase letter, and at least one special character\"\r\n            pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&^#\\\\$=+_\\-*\\.])[A-Za-z\\d@$!%*?&^#\\\\$=+_\\-*\\.]*$\"\r\n            name=\"cpassword\"\r\n            required\r\n            placeholder=\"\"\r\n            value={passwordInfo.cpassword}\r\n            onChange={handlePasswordChange}\r\n          ></input>\r\n          <label htmlFor=\"password\">Confirm Password</label>\r\n          <span className={showCpassword ? 'active' : ''} onClick={() => setShowCpassword(!showCpassword)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M30.94 15.66A16.69 16.69 0 0 0 16 5A16.69 16.69 0 0 0 1.06 15.66a1 1 0 0 0 0 .68A16.69 16.69 0 0 0 16 27a16.69 16.69 0 0 0 14.94-10.66a1 1 0 0 0 0-.68ZM16 25c-5.3 0-10.9-3.93-12.93-9C5.1 10.93 10.7 7 16 7s10.9 3.93 12.93 9C26.9 21.07 21.3 25 16 25Z\" /><path fill=\"currentColor\" d=\"M16 10a6 6 0 1 0 6 6a6 6 0 0 0-6-6Zm0 10a4 4 0 1 1 4-4a4 4 0 0 1-4 4Z\" /></svg></span>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default PasswordInfoForm;\r\n","import { useDispatch, useSelector } from \"react-redux\"\r\nimport React, { useState, useEffect } from \"react\"\r\nimport { useQuery } from \"@tanstack/react-query\"\r\n\r\nimport ProfilePicture from \"./PictureFolder/PPicture\"\r\nimport UserInfoForm from \"./InfoFolder/UInfo\"\r\nimport AddressInfoForm from \"./AddressFolder/ADInfo\"\r\nimport PasswordInfoForm from \"./PasswordFolder/PInfo\"\r\n\r\nimport { NewCardHelper, SettingsCardHelper } from \"../CardHelper/CardHelper\"\r\nimport { NoCardSvg } from \"../Cart/Card/CardSvgs\"\r\nimport {\r\n  clearTempCards,\r\n  setCreateCard,\r\n} from \"../../store/slices/cardSlice/cardSlice\"\r\n\r\nimport { useDeleteCard, useLogout, useUpdateCard, useUpdateUser } from \"../../helpers/UserHelper/UserHelper\"\r\n\r\nimport {\r\n  clearPasswordInfo,\r\n  clearUser,\r\n  updatePasswordInfo,\r\n  updateUserInfo,\r\n} from \"../../store/slices/userSettings/userSettingsSlices\"\r\nimport {\r\n  cardInfoValidity,\r\n  getCardStatusEnum,\r\n  getCardTypeEnum,\r\n  isInfoValid,\r\n  passwordInfoValidity,\r\n  userInfoValidity,\r\n} from \"../UsefullComponents/Usefull\"\r\nimport { getUser } from \"../../helpers/API/user-api\"\r\n\r\nfunction UserSettings() {\r\n  const dispatch = useDispatch()\r\n  const logout = useLogout()\r\n  const updateUser = useUpdateUser()\r\n  const updateCard = useUpdateCard()\r\n  const removeCard = useDeleteCard()\r\n  const role = useSelector((state) => state.role.role)\r\n  const tokens = useSelector((state) => state.role.authTokens)\r\n  const userid = useSelector(state => state.role.userid)\r\n  const userCards = useSelector((state) => state.user.userCards)\r\n  const createCard = useSelector((state) => state.card.createCard)\r\n  const tempCards = useSelector((state) => state.card.tempCards)\r\n  const userInfo = useSelector((state) => state.userSettings.userInfo)\r\n  const userPassword = useSelector((state) => state.userSettings.passwordInfo)\r\n  const [currentPage, setCurrentPage] = useState(\"accountInfo\")\r\n\r\n  const [modifiedCards, setModifiedCards] = useState([])\r\n  const [modifiedUser, setModifiedUser] = useState(null)\r\n  const [modifiedPassword, setModifiedPassword] = useState(null)\r\n\r\n  const [updateCardsValid, setUpdateCardsValid] = useState(false)\r\n  const [userInfoValid, setUserInfoValid] = useState(false)\r\n  const [userPasswordValid, setUserPasswordValid] = useState(false)\r\n\r\n  const [isSubmitButtonDisabled, setIsSubmitButtonDisabled] = useState(true)\r\n  const [isClearButtonDisabled, setIsClearButtonDisabled] = useState(true)\r\n\r\n  const { data } = useQuery({\r\n    queryKey: ['userQuery', userid],\r\n    queryFn: () => getUser(userid, tokens),\r\n    enabled: !!(tokens?.accessToken && tokens?.refreshToken && userid?.length > 0)\r\n  })\r\n\r\n  useEffect(() => {\r\n    if (data) {\r\n      let modifiedTempUser = {}\r\n      for (let key in userInfo) {\r\n        if (userInfo[key] !== \"\" && userInfo[key] !== data[key] && key !== 'image') {\r\n          modifiedTempUser[key] = userInfo[key]\r\n        }\r\n      }\r\n      setModifiedUser(modifiedTempUser)\r\n    }\r\n  }, [userInfo, data])\r\n\r\n  useEffect(() => {\r\n    if (userPassword) setModifiedPassword(userPassword)\r\n  }, [userPassword])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      modifiedPassword && modifiedPassword?.password === modifiedPassword?.cpassword\r\n    ) {\r\n      setUserPasswordValid(\r\n        isInfoValid(passwordInfoValidity, modifiedPassword, [\r\n          \"password\",\r\n          \"originalPassword\",\r\n          \"cpassword\",\r\n        ])\r\n      )\r\n    } else {\r\n      setUserPasswordValid(false)\r\n    }\r\n  }, [modifiedPassword, data])\r\n\r\n  useEffect(() => {\r\n    let modifiedTempCards = tempCards?.map((card) => {\r\n      let modifiedCard = {}\r\n      let originalCard = data?.cards.find((c) => c.id === card.id)\r\n      for (let key in card) {\r\n        if (card[key] !== \"\" && key !== \"originalStatus\") {\r\n          if ((key === \"cardStatus\" && card[key] === card.originalStatus) ||\r\n            (originalCard && card[key] === originalCard[key] && key !== \"id\")\r\n          ) {\r\n            continue\r\n          }\r\n\r\n          modifiedCard[key] = card[key]\r\n        }\r\n      }\r\n\r\n      if (modifiedCard.number) {\r\n        modifiedCard.type = modifiedCard.type.cardtype\r\n      } else {\r\n        delete modifiedCard.type\r\n      }\r\n\r\n      return modifiedCard\r\n    })\r\n    setModifiedCards(modifiedTempCards || [])\r\n  }, [tempCards, data])\r\n\r\n  useEffect(() => {\r\n    if (\r\n      modifiedCards?.some(\r\n        (e) => e.holder || e.number || e.cardStatus || e.cvc || e.date || e.removal\r\n      )\r\n    ) {\r\n      const allCardsValid = modifiedCards.every((modifiedCard) => {\r\n        const keysToCheck = Object.keys(modifiedCard).filter(\r\n          (key) => key !== \"id\" && key !== \"type\"\r\n        )\r\n\r\n        return isInfoValid(cardInfoValidity, modifiedCard, keysToCheck)\r\n      })\r\n\r\n      setUpdateCardsValid(allCardsValid)\r\n    } else {\r\n      setUpdateCardsValid(false)\r\n    }\r\n  }, [modifiedCards])\r\n\r\n  useEffect(() => {\r\n    if (modifiedUser) {\r\n      const keysToCheck = Object.keys(modifiedUser)\r\n\r\n      const hasNonEmptyKey = keysToCheck.some(\r\n        (key) => modifiedUser[key] !== \"\"\r\n      )\r\n\r\n      if (hasNonEmptyKey) {\r\n        setUserInfoValid(\r\n          isInfoValid(userInfoValidity, modifiedUser, keysToCheck)\r\n        )\r\n      } else {\r\n        setUserInfoValid(false)\r\n      }\r\n    }\r\n  }, [modifiedUser])\r\n\r\n  useEffect(() => {\r\n    switch (currentPage) {\r\n      case \"accountInfo\":\r\n        setIsSubmitButtonDisabled(!userInfoValid)\r\n        break\r\n      case \"security\":\r\n        setIsSubmitButtonDisabled(!userPasswordValid)\r\n        break\r\n      case \"payment\":\r\n        setIsSubmitButtonDisabled(!updateCardsValid)\r\n        break\r\n      default:\r\n        setIsSubmitButtonDisabled(true)\r\n    }\r\n  }, [currentPage, updateCardsValid, userInfoValid, userPasswordValid])\r\n\r\n  useEffect(() => {\r\n    switch (currentPage) {\r\n      case \"accountInfo\":\r\n        setIsClearButtonDisabled(\r\n          !(modifiedUser\r\n            ? Object.keys(modifiedUser).some((key) => modifiedUser[key] !== \"\")\r\n            : false)\r\n        )\r\n        break\r\n      case \"security\":\r\n        setIsClearButtonDisabled(!userPassword)\r\n        break\r\n      case \"payment\":\r\n        setIsClearButtonDisabled(\r\n          !modifiedCards?.some(\r\n            (e) => e.holder || e.number || e.cardStatus || e.cvc || e.date\r\n          )\r\n        )\r\n        break\r\n      default:\r\n        setIsClearButtonDisabled(true)\r\n    }\r\n  }, [currentPage, modifiedCards, modifiedUser, userPassword])\r\n\r\n  const showSubmitDiv = () => {\r\n    if (currentPage === \"manage\") {\r\n      return false\r\n    } else if (currentPage === \"payment\") {\r\n      if (createCard || !userCards?.length) {\r\n        return false\r\n      } else {\r\n        return true\r\n      }\r\n    } else {\r\n      return true\r\n    }\r\n  }\r\n\r\n  function handleClearClick() {\r\n    switch (currentPage) {\r\n      case \"accountInfo\":\r\n        dispatch(clearUser())\r\n        break\r\n      case \"security\":\r\n        dispatch(clearPasswordInfo())\r\n        break\r\n      case \"payment\":\r\n        dispatch(clearTempCards())\r\n        break\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  const handleSubmitUserInfo = () => {\r\n    let tempImage\r\n    if (modifiedUser?.image?.base64) {\r\n      const byteArray = new Uint8Array(atob(modifiedUser.image.base64).split(\"\").map(char => char.charCodeAt(0)))\r\n      tempImage = byteArray\r\n    }\r\n\r\n    const tempUser = {\r\n      FirstName: modifiedUser.firstName || '',\r\n      LastName: modifiedUser.lastName || '',\r\n      Username: modifiedUser.username || '',\r\n      Password: '',\r\n      ConfirmationPassword: '',\r\n      Email: modifiedUser.email || '',\r\n      PhoneNumber: modifiedUser.phoneNumber || '',\r\n      Address: modifiedUser.address || '',\r\n      PostalCode: modifiedUser.postalCode || '',\r\n      City: modifiedUser.city || '',\r\n      Image: tempImage || '',\r\n      id: data.id\r\n    }\r\n    updateUser(tempUser)\r\n  }\r\n\r\n  const handleSubmitUserCards = () => {\r\n    const tempAsyncCards = modifiedCards.slice()\r\n    tempAsyncCards.forEach(card => {\r\n      if (card.removal) {\r\n        removeCard(card.id)\r\n      } else {\r\n        if (card.type || card.cardStatus || card.number || card.holder || card.cvc) {\r\n          const tempCard = {\r\n            Id: card.id,\r\n            CardType: card.type ? getCardTypeEnum(card.type) : null,\r\n            CardStatus: card.cardStatus ? getCardStatusEnum(card.cardStatus) : null,\r\n            CardNumber: card.number || null,\r\n            CardHolder: card.holder || null,\r\n            ExpirationDate: card.date || null,\r\n            SecurityCode: card.cvc || null,\r\n            UserId: data.id,\r\n          }\r\n          updateCard(tempCard)\r\n        }\r\n      }\r\n    })\r\n  }\r\n\r\n  const handleSubmitUserPassword = () => {\r\n    if (\r\n      modifiedPassword && modifiedPassword?.password === modifiedPassword?.cpassword\r\n    ) {\r\n      const tempUser = {\r\n        FirstName: '',\r\n        LastName: '',\r\n        Username: '',\r\n        Password: modifiedPassword.password,\r\n        ConfirmationPassword: modifiedPassword.originalPassword,\r\n        // OriginalPassword: modifiedPassword.orignalPassword,\r\n        Email: '',\r\n        PhoneNumber: '',\r\n        Address: '',\r\n        PostalCode: '',\r\n        City: '',\r\n        Image: '',\r\n        id: data.id\r\n      }\r\n\r\n      updateUser(tempUser)\r\n    }\r\n  }\r\n\r\n  function handleSubmitClick() {\r\n    switch (currentPage) {\r\n      case \"accountInfo\":\r\n        handleSubmitUserInfo()\r\n        break\r\n      case \"security\":\r\n        handleSubmitUserPassword()\r\n        break\r\n      case \"payment\":\r\n        handleSubmitUserCards()\r\n        break\r\n      default:\r\n        return\r\n    }\r\n  }\r\n\r\n  const handleLogOutClick = () => {\r\n    logout()\r\n  }\r\n\r\n  const handleInputEdit = (e) => {\r\n    dispatch(updateUserInfo({ name: e.target.name, value: e.target.value }))\r\n  }\r\n\r\n  const handleInputImage = ({ name, value }) => {\r\n    dispatch(updateUserInfo({ name, value }))\r\n  }\r\n\r\n  const handlePasswordChange = (e) => {\r\n    dispatch(\r\n      updatePasswordInfo({ name: e.target.name, value: e.target.value })\r\n    )\r\n  }\r\n\r\n  if (data) {\r\n    return (\r\n      <main className=\"user-settings-main\">\r\n        <nav>\r\n          <ul>\r\n            <li>\r\n              <button\r\n                onClick={() => setCurrentPage(\"accountInfo\")}\r\n                disabled={currentPage === \"accountInfo\"}\r\n              >\r\n                <h3>Account Info</h3>\r\n                <svg viewBox=\"0 0 32 32\">\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M28 6v20H4V6h24m0-2H4a2 2 0 0 0-2 2v20a2 2 0 0 0 2 2h24a2 2 0 0 0 2-2V6a2 2 0 0 0-2-2Z\"\r\n                  />\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M6 10h7v2H6zm0 4h4v2H6zm17 4h-6a3 3 0 0 0-3 3v2h2v-2a1 1 0 0 1 1-1h6a1 1 0 0 1 1 1v2h2v-2a3 3 0 0 0-3-3zm-3-1a4 4 0 1 0-4-4a4 4 0 0 0 4 4zm0-6a2 2 0 1 1-2 2a2 2 0 0 1 2-2z\"\r\n                  />\r\n                </svg>\r\n              </button>\r\n            </li>\r\n            <li>\r\n              <button\r\n                onClick={() => setCurrentPage(\"security\")}\r\n                disabled={currentPage === \"security\"}\r\n              >\r\n                <h3>Password And Security</h3>\r\n                <svg viewBox=\"0 0 32 32\">\r\n                  <path\r\n                    fill=\"currentColor\"\r\n                    d=\"M21 2a8.998 8.998 0 0 0-8.612 11.612L2 24v6h6l10.388-10.388A9 9 0 1 0 21 2Zm0 16a7.013 7.013 0 0 1-2.032-.302l-1.147-.348l-.847.847l-3.181 3.181L12.414 20L11 21.414l1.379 1.379l-1.586 1.586L9.414 23L8 24.414l1.379 1.379L7.172 28H4v-3.172l9.802-9.802l.848-.847l-.348-1.147A7 7 0 1 1 21 18Z\"\r\n                  />\r\n                  <circle cx=\"22\" cy=\"10\" r=\"2\" fill=\"currentColor\" />\r\n                </svg>\r\n              </button>\r\n            </li>\r\n            {role === 'User' &&\r\n              <li>\r\n                <button\r\n                  onClick={() => setCurrentPage(\"payment\")}\r\n                  disabled={currentPage === \"payment\"}\r\n                >\r\n                  <h3>Cards and Payment</h3>\r\n                  <svg viewBox=\"0 0 24 24\">\r\n                    <path\r\n                      fill=\"currentColor\"\r\n                      d=\"M21 8V6H7v2h14m0 8v-5H7v5h14m0-12a2 2 0 0 1 2 2v10a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6c0-1.11.89-2 2-2h14M3 20h15v2H3a2 2 0 0 1-2-2V9h2v11Z\"\r\n                    />\r\n                  </svg>\r\n                </button>\r\n              </li>\r\n            }\r\n            <li>\r\n              <button\r\n                onClick={() => setCurrentPage(\"manage\")}\r\n                disabled={currentPage === \"manage\"}\r\n              >\r\n                <h3>Manage Account</h3>\r\n                <svg viewBox=\"0 0 14 14\">\r\n                  <g\r\n                    fill=\"none\"\r\n                    stroke=\"currentColor\"\r\n                    strokeLinecap=\"round\"\r\n                    strokeLinejoin=\"round\"\r\n                  >\r\n                    <circle cx=\"5\" cy=\"2.75\" r=\"2.25\" />\r\n                    <path d=\"M5 12.5H.5V11a4.5 4.5 0 0 1 6.73-3.91m6.27 2.17L9.26 13.5m0-4.24l4.24 4.24\" />\r\n                  </g>\r\n                </svg>\r\n              </button>\r\n            </li>\r\n          </ul>\r\n          <button className=\"logOutButton\" onClick={handleLogOutClick}>\r\n            <h4>Log out</h4>\r\n            <svg viewBox=\"0 0 32 32\">\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M6 30h12a2.002 2.002 0 0 0 2-2v-3h-2v3H6V4h12v3h2V4a2.002 2.002 0 0 0-2-2H6a2.002 2.002 0 0 0-2 2v24a2.002 2.002 0 0 0 2 2Z\"\r\n              />\r\n              <path\r\n                fill=\"currentColor\"\r\n                d=\"M20.586 20.586L24.172 17H10v-2h14.172l-3.586-3.586L22 10l6 6l-6 6l-1.414-1.414z\"\r\n              />\r\n            </svg>\r\n          </button>\r\n        </nav>\r\n        <div className=\"dataParent\">\r\n          {currentPage === \"accountInfo\" ? (\r\n            <AccountInfoFu\r\n              user={data}\r\n              userInfo={userInfo}\r\n              handleInputEdit={handleInputEdit}\r\n              handleInputImage={handleInputImage}\r\n            ></AccountInfoFu>\r\n          ) : currentPage === \"security\" ? (\r\n            <SecurityFu\r\n              handlePasswordChange={handlePasswordChange}\r\n              passwordInfo={userPassword}\r\n              user={data}\r\n            ></SecurityFu>\r\n          ) : currentPage === \"payment\" ? (\r\n            <PaymentFu\r\n              userCards={userCards}\r\n              data={data}\r\n            ></PaymentFu>\r\n          ) : (\r\n            <ManageFu></ManageFu>\r\n          )}\r\n          {showSubmitDiv() && (\r\n            <div className=\"submitDiv\">\r\n              <p>Empty fields wont be changed.</p>\r\n              <button\r\n                className=\"clearButton\"\r\n                disabled={isClearButtonDisabled}\r\n                onClick={handleClearClick}\r\n              >\r\n                Clear\r\n              </button>\r\n              <button\r\n                className=\"saveButton\"\r\n                disabled={isSubmitButtonDisabled}\r\n                onClick={handleSubmitClick}\r\n              >\r\n                <span>Save</span> <span>Changes</span>\r\n              </button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      </main>\r\n    )\r\n  }\r\n}\r\n\r\nconst AccountInfoFu = ({\r\n  user,\r\n  userInfo,\r\n  handleInputEdit,\r\n  handleInputImage,\r\n}) => {\r\n  return (\r\n    <div className=\"dataContainer\">\r\n      <h2 className=\"subTitle\">Profile Picture</h2>\r\n      <ProfilePicture\r\n        handleInputEdit={handleInputImage}\r\n        userInfo={userInfo}\r\n        image={{ alt: `${user.firstName} ${user.lastName}`, url: user.image }}\r\n      ></ProfilePicture>\r\n      <h2 className=\"subTitle\">Credentials</h2>\r\n      <UserInfoForm\r\n        user={user}\r\n        userInfo={userInfo}\r\n        handleInputEdit={handleInputEdit}\r\n      ></UserInfoForm>\r\n      <h2 className=\"subTitle\">Address</h2>\r\n      <AddressInfoForm\r\n        user={user}\r\n        userInfo={userInfo}\r\n        handleInputEdit={handleInputEdit}\r\n      ></AddressInfoForm>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst SecurityFu = ({ handlePasswordChange, passwordInfo }) => {\r\n  return (\r\n    <div className=\"dataContainer\">\r\n      <h2 className=\"subTitle\">Change Password</h2>\r\n      <PasswordInfoForm\r\n        handlePasswordChange={handlePasswordChange}\r\n        passwordInfo={passwordInfo}\r\n      ></PasswordInfoForm>\r\n      {/* <h2 className=\"subTitle\">Security Settings</h2> */}\r\n      {/* <button className=\"checkButton stayButton\">\r\n        <p>Stay logged in</p>\r\n        <svg viewBox=\"0 0 150 150\">\r\n          <path\r\n            d=\"M121.875 18.75H28.125C25.6386 18.75 23.254 19.7377 21.4959 21.4959C19.7377 23.254 18.75 25.6386 18.75 28.125V121.875C18.75 124.361 19.7377 126.746 21.4959 128.504C23.254 130.262 25.6386 131.25 28.125 131.25H121.875C124.361 131.25 126.746 130.262 128.504 128.504C130.262 126.746 131.25 124.361 131.25 121.875V28.125C131.25 25.6386 130.262 23.254 128.504 21.4959C126.746 19.7377 124.361 18.75 121.875 18.75ZM28.125 121.875V28.125H121.875V121.875H28.125Z\"\r\n            fill=\"currentColor\"\r\n          />\r\n          <rect\r\n            x=\"40\"\r\n            y=\"40\"\r\n            width=\"70\"\r\n            height=\"70\"\r\n            rx=\"5\"\r\n            fill=\"currentColor\"\r\n          />\r\n        </svg>\r\n      </button> */}\r\n    </div>\r\n  )\r\n}\r\n\r\nconst PaymentFu = ({ userCards, data }) => {\r\n  const dispatch = useDispatch()\r\n  const createCard = useSelector((state) => state.card.createCard)\r\n  const handleCreateCard = () => {\r\n    dispatch(setCreateCard(true))\r\n  }\r\n\r\n  return (\r\n    <div className=\"dataContainer\">\r\n      <h2 className=\"subTitle\">\r\n        <span>Edit Payment Info</span>{\" \"}\r\n        <button\r\n          className=\"createCardButton\"\r\n          disabled={createCard}\r\n          onClick={handleCreateCard}\r\n        >\r\n          Create Card\r\n        </button>\r\n      </h2>\r\n      <form\r\n        className=\"dataForm paymentForm\"\r\n        onSubmit={(e) => {\r\n          e.preventDefault()\r\n        }}\r\n      >\r\n        {userCards?.length > 0 &&\r\n          !createCard &&\r\n          userCards.map((card) => (\r\n            <SettingsCardHelper\r\n              key={card.id}\r\n              cardID={card.id}\r\n            ></SettingsCardHelper>\r\n          ))}\r\n        {!userCards?.length > 0 && !createCard && (\r\n          <div className=\"noCardFound\">\r\n            <NoCardSvg></NoCardSvg>\r\n            <h1>no cards found</h1>\r\n            <p>save a card for easy access when making a purchase</p>\r\n          </div>\r\n        )}\r\n        {createCard && <NewCardHelper data={data}></NewCardHelper>}\r\n      </form>\r\n    </div>\r\n  )\r\n}\r\n\r\nconst ManageFu = () => {\r\n  const shippingArray = useSelector((state) => state.shipping.shippingArray)\r\n  return (\r\n    <>\r\n      <div className=\"dataContainer\">\r\n        <h2 className=\"subTitle\">Apply for Courier</h2>\r\n        <form\r\n          className=\"dataForm courierForm\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault()\r\n          }}\r\n        >\r\n          <div className=\"inputContainer\">\r\n            <p>Choose the City you will cover</p>\r\n            <select id=\"cars\" name=\"cars\">\r\n              {shippingArray.map((e) => (\r\n                <option key={e} value=\"e\">\r\n                  {e}\r\n                </option>\r\n              ))}\r\n            </select>\r\n            <button>Apply</button>\r\n          </div>\r\n          <p className=\"improtant\">\r\n            Courier accounts cannot access unrelated <span>C&S</span> services.\r\n          </p>\r\n        </form>\r\n        <h2 className=\"subTitle\">Delete Account</h2>\r\n        <form\r\n          className=\"dataForm deleteAccForm\"\r\n          onSubmit={(e) => {\r\n            e.preventDefault()\r\n          }}\r\n        >\r\n          <div className=\"inputContainer\">\r\n            <p>Tell us why you're removing your account.</p>\r\n            <select id=\"cars\" name=\"cars\">\r\n              <option value=\"1\">I have no use for it anymore</option>\r\n              <option value=\"1\">Click & Ship is too expensive</option>\r\n              <option value=\"1\">There's too much ads</option>\r\n              <option value=\"1\">For demonstration purposes</option>\r\n            </select>\r\n            <button>Delete</button>\r\n          </div>\r\n          <p className=\"improtant two\">\r\n            Once a delete request has been made, you will be able to cancel\r\n            removal by simply signing in with this account in the next 30 days.\r\n          </p>\r\n          <h3>Deleted accounts cannot be recovered</h3>\r\n        </form>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserSettings\r\n"],"names":["_ref","_userInfo$image","_userInfo$image2","_userInfo$image3","_userInfo$image4","_userInfo$image5","_userInfo$image6","_userInfo$image7","image","userInfo","handleInputEdit","dispatch","useDispatch","drag","setDrag","useState","fileInputKey","setFileInputKey","Date","now","handleFileInputChange","e","file","target","files","type","startsWith","img","Image","onload","this","width","height","reader","FileReader","onloadend","base64String","result","replace","name","value","base64","readAsDataURL","setNotificationData","title","success","error","setShowNotification","src","URL","createObjectURL","_jsxs","className","children","_jsx","ImageLoader","url","alt","backupUrl","backupAlt","concat","onDrop","onDragOver","handleDragOver","onDragLeave","handleDragLeave","dataURLtoFile","_Fragment","accept","onChange","onClick","handleCancel","user","onSubmit","preventDefault","firstName","maxLength","minLength","pattern","required","placeholder","htmlFor","lastName","email","phoneNumber","inputMode","shippingArray","useSelector","state","shipping","address","city","map","i","postalCode","handlePasswordChange","passwordInfo","showPassword","setShowPassword","showCpassword","setShowCpassword","showOriginalPassword","setShowOriginalPassword","originalPassword","xmlns","viewBox","fill","d","password","cpassword","AccountInfoFu","_ref2","handleInputImage","ProfilePicture","UserInfoForm","AddressInfoForm","SecurityFu","_ref3","PasswordInfoForm","PaymentFu","_ref4","userCards","data","createCard","card","disabled","handleCreateCard","setCreateCard","length","SettingsCardHelper","cardID","id","NoCardSvg","NewCardHelper","ManageFu","logout","useLogout","updateUser","useUpdateUser","updateCard","useUpdateCard","removeCard","useDeleteCard","role","tokens","authTokens","userid","tempCards","userSettings","userPassword","currentPage","setCurrentPage","modifiedCards","setModifiedCards","modifiedUser","setModifiedUser","modifiedPassword","setModifiedPassword","updateCardsValid","setUpdateCardsValid","userInfoValid","setUserInfoValid","userPasswordValid","setUserPasswordValid","isSubmitButtonDisabled","setIsSubmitButtonDisabled","isClearButtonDisabled","setIsClearButtonDisabled","useQuery","queryKey","queryFn","getUser","enabled","accessToken","refreshToken","useEffect","modifiedTempUser","key","isInfoValid","passwordInfoValidity","modifiedTempCards","modifiedCard","originalCard","cards","find","c","originalStatus","number","cardtype","some","holder","cardStatus","cvc","date","removal","allCardsValid","every","keysToCheck","Object","keys","filter","cardInfoValidity","hasNonEmptyKey","userInfoValidity","handleLogOutClick","updateUserInfo","updatePasswordInfo","cx","cy","r","stroke","strokeLinecap","strokeLinejoin","clearUser","clearPasswordInfo","clearTempCards","handleSubmitUserInfo","_modifiedUser$image","tempImage","Uint8Array","atob","split","char","charCodeAt","tempUser","FirstName","LastName","Username","username","Password","ConfirmationPassword","Email","PhoneNumber","Address","PostalCode","City","handleSubmitUserPassword","slice","forEach","tempCard","Id","CardType","getCardTypeEnum","CardStatus","getCardStatusEnum","CardNumber","CardHolder","ExpirationDate","SecurityCode","UserId"],"sourceRoot":""}