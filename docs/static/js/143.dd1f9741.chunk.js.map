{"version":3,"file":"static/js/143.dd1f9741.chunk.js","mappings":"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","sources":["components/AdminDashboard/AdminCategories.jsx","components/Categories/CategoriesList/SmallCategory.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\r\nimport { AdminBiggerCategory } from \"../Categories/CategoriesList/SmallCategory\"\r\nimport { useQuery } from \"@tanstack/react-query\"\r\nimport { getCategories, getCategoryByID } from \"../../helpers/API/category-api\"\r\nimport { LoadingErrorDiv } from \"../PageLoader/PageLoader\"\r\nimport ImageLoader from \"../ImageLoader/ImageLoader\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { PhotoPicker, dataURLtoFile, extractAndSortProductsFromCategory, getUniqueManufacturers } from \"../UsefullComponents/Usefull\"\r\nimport {\r\n    useCreateCategory,\r\n    useDeleteCategory,\r\n    useUpdateCategory,\r\n} from \"../../helpers/UserHelper/UserHelper\"\r\n\r\nfunction AdminCategories() {\r\n    const [currentCategoryId, setCurrentCategoryId] = useState(\"\")\r\n    const [inputCategoryId, setInputCategoryId] = useState(\"\")\r\n    const [showEdit, setShowEdit] = useState(false)\r\n    const [shouldDelete, setShouldDelete] = useState(false)\r\n    const [shouldCreate, setShouldCreate] = useState(false)\r\n\r\n    const [popularProducts, setPopularProducts] = useState([])\r\n    const [manufacturers, setManufacturers] = useState([])\r\n\r\n    const updateCategory = useUpdateCategory()\r\n    const deleteCategory = useDeleteCategory()\r\n\r\n    const {\r\n        data: categoriesData,\r\n        error: categoriesError,\r\n        isError: isCatError,\r\n        isPending: isCatPending,\r\n        isSuccess: catSuccess,\r\n        refetch: catRefetch,\r\n    } = useQuery({\r\n        queryKey: [\"categoriesQuery\"],\r\n        queryFn: getCategories,\r\n    })\r\n\r\n    const {\r\n        data: cCatData,\r\n        error: cCatError,\r\n        isError: isCCatError,\r\n        isPending: isCCatPending,\r\n        isSuccess: cCatSuccess,\r\n        refetch: cCatRefetch,\r\n    } = useQuery({\r\n        queryKey: [\"categoryQuery\", currentCategoryId],\r\n        queryFn: () => getCategoryByID(currentCategoryId),\r\n    })\r\n\r\n    useEffect(() => {\r\n        if (cCatData) setPopularProducts(extractAndSortProductsFromCategory(cCatData))\r\n    }, [cCatData])\r\n\r\n    useEffect(() => {\r\n        if (popularProducts) setManufacturers(getUniqueManufacturers(popularProducts))\r\n    }, [popularProducts])\r\n\r\n    useEffect(() => {\r\n        let timer\r\n        if (shouldDelete) {\r\n            timer = setTimeout(() => {\r\n                setShouldDelete(false)\r\n            }, 5000)\r\n        }\r\n\r\n        return () => {\r\n            clearTimeout(timer)\r\n        }\r\n    }, [shouldDelete])\r\n\r\n    useEffect(() => {\r\n        if (categoriesData) {\r\n            setCurrentCategoryId(categoriesData[0].id)\r\n        }\r\n    }, [categoriesData])\r\n\r\n    const handleSelectCategory = (e) => {\r\n        setCurrentCategoryId(e)\r\n    }\r\n\r\n    const handleSearchCat = () => {\r\n        setCurrentCategoryId(inputCategoryId)\r\n    }\r\n\r\n    const handleDelete = () => {\r\n        if (shouldDelete) {\r\n            setShouldDelete(false)\r\n            deleteCategory(cCatData.id)\r\n        } else {\r\n            setShouldDelete(true)\r\n        }\r\n    }\r\n\r\n    const handleEdit = () => {\r\n        if (shouldDelete) {\r\n            setShouldDelete(false)\r\n        }\r\n        setShowEdit(!showEdit)\r\n    }\r\n\r\n    const handleToggleCreate = () => {\r\n        setShouldCreate(!shouldCreate)\r\n    }\r\n\r\n    return (\r\n        <div className=\"swag categories\">\r\n            <div className=\"title\">\r\n                <div className=\"infos\">\r\n                    <h1>Categories</h1>\r\n                    <p>Click on a category to view/edit info</p>\r\n                </div>\r\n                <button onClick={handleToggleCreate}>\r\n                    {!shouldCreate ? (\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"32\"\r\n                            height=\"32\"\r\n                            viewBox=\"0 0 32 32\"\r\n                        >\r\n                            <path\r\n                                fill=\"currentColor\"\r\n                                d=\"M30 24h-4v-4h-2v4h-4v2h4v4h2v-4h4z\"\r\n                            />\r\n                            <path\r\n                                fill=\"currentColor\"\r\n                                d=\"M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z\"\r\n                            />\r\n                        </svg>\r\n                    ) : (\r\n                        <svg\r\n                            xmlns=\"http://www.w3.org/2000/svg\"\r\n                            width=\"32\"\r\n                            height=\"32\"\r\n                            viewBox=\"0 0 32 32\"\r\n                        >\r\n                            <path\r\n                                fill=\"currentColor\"\r\n                                d=\"M30 21.4L28.6 20L25 23.6L21.4 20L20 21.4l3.6 3.6l-3.6 3.6l1.4 1.4l3.6-3.6l3.6 3.6l1.4-1.4l-3.6-3.6z\"\r\n                            />\r\n                            <path\r\n                                fill=\"currentColor\"\r\n                                d=\"M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z\"\r\n                            />\r\n                        </svg>\r\n                    )}\r\n                </button>\r\n            </div>\r\n            {isCatPending || isCatError ? (\r\n                <LoadingErrorDiv\r\n                    isError={isCatError}\r\n                    classTitle={\"pOrders\"}\r\n                    errorMessage={categoriesError?.message}\r\n                    refetch={catRefetch}\r\n                    loadMessage={\"Loading Available Orders...\"}\r\n                ></LoadingErrorDiv>\r\n            ) : catSuccess ? (\r\n                <>\r\n                    {shouldCreate ? (\r\n                        <CreateCategory categories={categoriesData}></CreateCategory>\r\n                    ) : (\r\n                        <ul className=\"swagList\">\r\n                            {categoriesData.map((e) => (\r\n                                <AdminBiggerCategory\r\n                                    key={e.id}\r\n                                    category={e}\r\n                                    selectCategory={handleSelectCategory}\r\n                                ></AdminBiggerCategory>\r\n                            ))}\r\n                        </ul>\r\n                    )}\r\n                </>\r\n            ) : (\r\n                <></>\r\n            )}\r\n            <div className=\"title\">\r\n                <div className=\"infos\">\r\n                    <h1>Category Info</h1>\r\n                    <p>Click on or search a category by its ID</p>\r\n                </div>\r\n                <div className=\"buttons\">\r\n                    <input\r\n                        onChange={(e) => setInputCategoryId(e.target.value)}\r\n                        type=\"text\"\r\n                        placeholder=\"Enter ID\"\r\n                    />\r\n                    <button disabled={!inputCategoryId} onClick={handleSearchCat}>\r\n                        find\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n            {categoriesData && (\r\n                <>\r\n                    {isCCatPending || isCCatError ? (\r\n                        <LoadingErrorDiv\r\n                            isError={isCCatError}\r\n                            classTitle={\"pOrders\"}\r\n                            errorMessage={cCatError?.message}\r\n                            refetch={cCatRefetch}\r\n                            loadMessage={\"Loading Available Orders...\"}\r\n                        ></LoadingErrorDiv>\r\n                    ) : cCatSuccess ? (\r\n                        <div className=\"singleCat\">\r\n                            <div className=\"catInfo\">\r\n                                <div className=\"imageDiv\">\r\n                                    <ImageLoader\r\n                                        url={cCatData.image}\r\n                                        alt={cCatData.name}\r\n                                        backupUrl=\"/assets/imgs/404/category404.png\"\r\n                                        backupAlt={cCatData.name || \"Category\"}\r\n                                    ></ImageLoader>\r\n                                    <div>\r\n                                        <ImageLoader\r\n                                            url={cCatData.icon}\r\n                                            alt={cCatData.name}\r\n                                            backupUrl=\"/assets/imgs/404/category404.png\"\r\n                                            backupAlt={cCatData.name || \"Category\"}\r\n                                        ></ImageLoader>\r\n                                        <section>\r\n                                            <h2>{cCatData.name}</h2>\r\n                                            <p>ID: {cCatData.id}</p>\r\n                                        </section>\r\n                                        <section className=\"buttonSection\">\r\n                                            <button onClick={handleEdit}>EDIT</button>\r\n                                            <button\r\n                                                className={`delete ${shouldDelete && \"active\"}`}\r\n                                                onClick={handleDelete}\r\n                                            >\r\n                                                DELETE\r\n                                            </button>\r\n                                        </section>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"subList\">\r\n                                    <ul>\r\n                                        <li className=\"subTitle\">\r\n                                            <h3>Manufacturers</h3>\r\n                                        </li>\r\n                                        {manufacturers?.map((e) => (\r\n                                            <li key={e.id}>\r\n                                                <NavLink>\r\n                                                    <ImageLoader\r\n                                                        url={e.image}\r\n                                                        alt={e.name}\r\n                                                        backupUrl=\"/assets/imgs/404/category404.png\"\r\n                                                        backupAlt={e.name || \"Manufacturer\"}\r\n                                                    ></ImageLoader>\r\n                                                    <p>{e.name}</p>\r\n                                                </NavLink>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                    <ul>\r\n                                        <li className=\"subTitle\">\r\n                                            <h3>Sub-Categories</h3>\r\n                                        </li>\r\n                                        {cCatData.subcategories.map((e) => (\r\n                                            <li key={e.id}>\r\n                                                <NavLink to={`/sub/${e.id}`}>\r\n                                                    <ImageLoader\r\n                                                        url={e.image}\r\n                                                        alt={e.name}\r\n                                                        backupUrl=\"/assets/imgs/404/category404.png\"\r\n                                                        backupAlt={e.name || \"Manufacturer\"}\r\n                                                    ></ImageLoader>\r\n                                                    <p>{e.name}</p>\r\n                                                </NavLink>\r\n                                            </li>\r\n                                        ))}\r\n                                    </ul>\r\n                                </div>\r\n                            </div>\r\n                            {showEdit && (\r\n                                <EditCreateCategory\r\n                                    category={cCatData}\r\n                                    updateCategory={updateCategory}\r\n                                ></EditCreateCategory>\r\n                            )}\r\n                        </div>\r\n                    ) : (\r\n                        <></>\r\n                    )}\r\n                </>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst EditCreateCategory = ({ category, updateCategory }) => {\r\n    const [categoryObject, setCategoryObject] = useState({\r\n        name: \"\",\r\n        image: null,\r\n        icon: null,\r\n    })\r\n\r\n    const handleChangeInfo = ({ name, value }) => {\r\n        setCategoryObject({ ...categoryObject, [name]: value })\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        if (\r\n            categoryObject.name !== category.name &&\r\n            (categoryObject.name ||\r\n                categoryObject.image !== null ||\r\n                categoryObject.icon !== null)\r\n        ) {\r\n            updateCategory(categoryObject)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"editCategory\" onSubmit={handleSubmit}>\r\n            <div className=\"images\">\r\n                <div>\r\n                    <h3>Category Image</h3>\r\n                    <PhotoPicker\r\n                        image={categoryObject.image}\r\n                        setImage={handleChangeInfo}\r\n                        imageName={\"image\"}\r\n                    ></PhotoPicker>\r\n                </div>\r\n                <div>\r\n                    <h3>Category Icon</h3>\r\n                    <PhotoPicker\r\n                        image={categoryObject.icon}\r\n                        setImage={handleChangeInfo}\r\n                        imageName={\"icon\"}\r\n                    ></PhotoPicker>\r\n                </div>\r\n            </div>\r\n            <div className=\"info\">\r\n                <h3>Category Name</h3>\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        maxLength=\"15\"\r\n                        minLength=\"3\"\r\n                        pattern=\"^[a-zA-Z\\\\s ]*$\"\r\n                        name=\"name\"\r\n                        value={categoryObject.name}\r\n                        onChange={(e) =>\r\n                            handleChangeInfo({\r\n                                name: e.target.name,\r\n                                value:\r\n                                    e.target.value.charAt(0).toUpperCase() +\r\n                                    e.target.value.slice(1),\r\n                            })\r\n                        }\r\n                        placeholder=\"\"\r\n                    ></input>\r\n                    <label htmlFor=\"name\">Category Name</label>\r\n                </div>\r\n                <button\r\n                    disabled={\r\n                        (categoryObject.name && categoryObject.name === category.name) ||\r\n                        (!categoryObject.name &&\r\n                            categoryObject.image === null &&\r\n                            categoryObject.icon === null)\r\n                    }\r\n                    type=\"submit\"\r\n                >\r\n                    SAVE\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst CreateCategory = ({ categories }) => {\r\n    const createCategory = useCreateCategory()\r\n    const [categoryObject, setCategoryObject] = useState({\r\n        name: \"\",\r\n        image: null,\r\n        icon: null,\r\n        manufacturers: [],\r\n        subCategories: [],\r\n    })\r\n    const [subCategory, setSubCategory] = useState({\r\n        name: \"\",\r\n        image: null,\r\n        description: \"\",\r\n    })\r\n    const [manufacturer, setManufacturer] = useState({ name: \"\", image: null })\r\n    const [subCatValid, setSubCatValid] = useState(false)\r\n    const [manufacturerValid, setManufacturerValid] = useState(false)\r\n    const [categoryValid, setCategoryValid] = useState(false)\r\n    const [crSubCat, setCrSubCat] = useState(true)\r\n    const [crMan, setMan] = useState(true)\r\n\r\n    const handleChangeCategoryInfo = ({ name, value }) => {\r\n        if (name === \"subCategories\" || name === \"manufacturers\") {\r\n            setCategoryObject({\r\n                ...categoryObject,\r\n                [name]: [...categoryObject[name], value],\r\n            })\r\n        } else {\r\n            setCategoryObject({ ...categoryObject, [name]: value })\r\n        }\r\n    }\r\n\r\n    const handleRemoveSubCat = (e) => {\r\n        setCategoryObject({\r\n            ...categoryObject,\r\n            'subCategories': categoryObject['subCategories'].filter(c => c.name !== e),\r\n        })\r\n    }\r\n\r\n    const handleRemoveMan = (e) => {\r\n        setCategoryObject({\r\n            ...categoryObject,\r\n            'manufacturers': categoryObject['manufacturers'].filter(c => c.name !== e),\r\n        })\r\n    }\r\n\r\n    const handleChangeSUBInfo = ({ name, value }) => {\r\n        setSubCategory({\r\n            ...subCategory,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleChangeMNInfo = ({ name, value }) => {\r\n        setManufacturer({\r\n            ...manufacturer,\r\n            [name]: value\r\n        })\r\n    }\r\n\r\n    const handleAddManufacturer = () => {\r\n        handleChangeCategoryInfo({ name: \"manufacturers\", value: manufacturer })\r\n        setManufacturer({ name: \"\", image: null })\r\n        setMan(false)\r\n    }\r\n\r\n    const handleAddSubCat = () => {\r\n        handleChangeCategoryInfo({ name: \"subCategories\", value: subCategory })\r\n        setSubCategory({ name: \"\", image: null, description: \"\" })\r\n        setCrSubCat(false)\r\n    }\r\n\r\n    const handleToggleMan = () => {\r\n        setMan(!crMan)\r\n    }\r\n\r\n    const handleToggleSubCat = () => {\r\n        setCrSubCat(!crSubCat)\r\n    }\r\n\r\n    const resetAll = () => {\r\n        setCategoryObject({\r\n            name: \"\",\r\n            image: null,\r\n            icon: null,\r\n            manufacturers: [],\r\n            subCategories: [],\r\n        })\r\n        setSubCategory({ name: \"\", image: null, description: \"\" })\r\n        setManufacturer({ name: \"\", image: null })\r\n        setCrSubCat(false)\r\n        setMan(false)\r\n    }\r\n\r\n    useEffect(() => {\r\n        const isSubCatNameInArray = categoryObject.subCategories.some(\r\n            (subCat) => subCat.name === subCategory.name\r\n        )\r\n        const isSubCatEmpty =\r\n            subCategory.image !== null &&\r\n            subCategory.name.length >= 3 &&\r\n            subCategory.description.length >= 10\r\n        setSubCatValid(!isSubCatNameInArray && isSubCatEmpty)\r\n    }, [subCategory, categoryObject.subCategories])\r\n\r\n    useEffect(() => {\r\n        const isManufacturerNameInArray = categoryObject.manufacturers.some(\r\n            (man) => man.name === manufacturer.name\r\n        )\r\n        const isManufacturerEmpty =\r\n            manufacturer.image !== null && manufacturer.name.length >= 3\r\n        setManufacturerValid(!isManufacturerNameInArray && isManufacturerEmpty)\r\n    }, [manufacturer, categoryObject.manufacturers])\r\n\r\n    useEffect(() => {\r\n        const isCategoryNameUnique = !categories.some(\r\n            (category) => category.name === categoryObject.name\r\n        )\r\n\r\n        const isImageAndIconNotNull =\r\n            categoryObject.image !== null && categoryObject.icon !== null\r\n\r\n        const categoryValid =\r\n            categoryObject.manufacturers.length >= 3 &&\r\n            categoryObject.manufacturers.length === 5 &&\r\n            isCategoryNameUnique &&\r\n            isImageAndIconNotNull\r\n\r\n        setCategoryValid(categoryValid)\r\n    }, [categoryObject, categories])\r\n\r\n    useEffect(() => {\r\n        if (categoryObject.subCategories.length === 0) setCrSubCat(true)\r\n    }, [categoryObject.subCategories])\r\n\r\n    useEffect(() => {\r\n        if (categoryObject.manufacturers.length === 0) setMan(true)\r\n    }, [categoryObject.manufacturers])\r\n\r\n    const handleSubmit = (e) => {\r\n        if (categoryValid) {\r\n            e.preventDefault()\r\n            const mapCategory = (categoryObject) => {\r\n                return {\r\n                    name: categoryObject.name || \"\",\r\n                    image: \"\",\r\n                    icon: \"\",\r\n                    subcategories: categoryObject.subCategories.map(subcategory => ({\r\n                        name: subcategory.name || \"\",\r\n                        image: \"image\",\r\n                        description: subcategory.description || \"\",\r\n                        categoryId: \"\"\r\n                    })),\r\n                    manufacturers: categoryObject.manufacturers.map(manufacturer => ({\r\n                        name: manufacturer.name || \"\",\r\n                        image: \"image\"\r\n                    }))\r\n                };\r\n            };\r\n            \r\n            const mappedCategory = mapCategory(categoryObject)\r\n            \r\n            const mappedCat = {\r\n                name: categoryObject.name || \"Kids and Toys\",\r\n                icon: \"/imgs/categories/kids-and-toys-icon.jpg\",\r\n                image: \"/imgs/categories/kids-and-toys.jpg\",\r\n                subcategories: [\r\n                    {\r\n                        image: \"/imgs/subCategories/educational-kids-toys.jpg\",\r\n                        description: categoryObject.subCategories[0].description || \"\",\r\n                        name: categoryObject.subCategories[0].name || \"\",\r\n                        categoryId: \"\"\r\n                    },\r\n                    {\r\n                        image: \"/imgs/subCategories/outdoor-kids-toys.jpg\",\r\n                        description: categoryObject.subCategories[1].description || \"\",\r\n                        name: categoryObject.subCategories[1].name || \"\",\r\n                        categoryId: \"\"\r\n                    },\r\n                    {\r\n                        image: \"/imgs/subCategories/action-figures-kids-toys.jpg\",\r\n                        description: categoryObject.subCategories[2].description || \"\",\r\n                        name: categoryObject.subCategories[2].name || \"\",\r\n                        categoryId: \"\"\r\n                    }\r\n                ],\r\n                manufacturers: mappedCategory.manufacturers\r\n            }\r\n            console.log(mappedCat)\r\n\r\n            createCategory(mappedCat)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form className=\"createCategory\" onSubmit={handleSubmit}>\r\n            <div className=\"crCatInfo\">\r\n                <div className=\"bigImg\">\r\n                    <h3>Category Image</h3>\r\n                    <PhotoPicker\r\n                        image={categoryObject.image}\r\n                        setImage={handleChangeCategoryInfo}\r\n                        imageName={\"image\"}\r\n                    ></PhotoPicker>\r\n                </div>\r\n                <div className=\"crInfoB\">\r\n                    <div className=\"smallImage\">\r\n                        <h3>Category Icon</h3>\r\n                        <PhotoPicker\r\n                            image={categoryObject.icon}\r\n                            setImage={handleChangeCategoryInfo}\r\n                            imageName={\"icon\"}\r\n                        ></PhotoPicker>\r\n                    </div>\r\n                    <div className=\"info\">\r\n                        <input\r\n                            type=\"text\"\r\n                            maxLength=\"15\"\r\n                            minLength=\"3\"\r\n                            pattern=\"^[a-zA-Z\\\\s ]*$\"\r\n                            name=\"name\"\r\n                            value={categoryObject.name}\r\n                            onChange={(e) =>\r\n                                handleChangeCategoryInfo({\r\n                                    name: e.target.name,\r\n                                    value:\r\n                                        e.target.value.charAt(0).toUpperCase() +\r\n                                        e.target.value.slice(1),\r\n                                })\r\n                            }\r\n                            placeholder=\"\"\r\n                            required\r\n                        ></input>\r\n                        <label htmlFor=\"name\">Category Name</label>\r\n                    </div>\r\n                    <section className=\"buttonSection\">\r\n                        <button onClick={resetAll} type=\"button\">\r\n                            RESET\r\n                        </button>\r\n                        <button disabled={!categoryValid} type=\"submit\">\r\n                            CREATE\r\n                        </button>\r\n                    </section>\r\n                </div>\r\n            </div>\r\n            <div className=\"subList\">\r\n                <div className=\"crDiv createSUB\">\r\n                    <h3 className=\"subTitle\">\r\n                        Sub-Categories{\" \"}\r\n                        <button type=\"button\" onClick={handleToggleSubCat}>\r\n                            {!crSubCat ? (\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"32\"\r\n                                    height=\"32\"\r\n                                    viewBox=\"0 0 32 32\"\r\n                                >\r\n                                    <path\r\n                                        fill=\"currentColor\"\r\n                                        d=\"M30 24h-4v-4h-2v4h-4v2h4v4h2v-4h4z\"\r\n                                    />\r\n                                    <path\r\n                                        fill=\"currentColor\"\r\n                                        d=\"M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z\"\r\n                                    />\r\n                                </svg>\r\n                            ) : (\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"32\"\r\n                                    height=\"32\"\r\n                                    viewBox=\"0 0 32 32\"\r\n                                >\r\n                                    <path\r\n                                        fill=\"currentColor\"\r\n                                        d=\"M30 21.4L28.6 20L25 23.6L21.4 20L20 21.4l3.6 3.6l-3.6 3.6l1.4 1.4l3.6-3.6l3.6 3.6l1.4-1.4l-3.6-3.6z\"\r\n                                    />\r\n                                    <path\r\n                                        fill=\"currentColor\"\r\n                                        d=\"M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z\"\r\n                                    />\r\n                                </svg>\r\n                            )}\r\n                        </button>\r\n                    </h3>\r\n                    {crSubCat ? (\r\n                        <div className=\"subCatsDiv\">\r\n                            <textarea\r\n                                className=\"review-textArea\"\r\n                                name=\"description\"\r\n                                type=\"text\"\r\n                                value={subCategory.description}\r\n                                onChange={(e) =>\r\n                                    handleChangeSUBInfo({\r\n                                        name: e.target.name,\r\n                                        value:\r\n                                            e.target.value.charAt(0).toUpperCase() +\r\n                                            e.target.value.slice(1),\r\n                                    })\r\n                                }\r\n                                placeholder=\"Write a description for this sub-category\"\r\n                            ></textarea>\r\n                            <PhotoPicker\r\n                                image={subCategory.image}\r\n                                setImage={handleChangeSUBInfo}\r\n                                imageName={\"image\"}\r\n                            ></PhotoPicker>\r\n                            <section className=\"titleSubmit\">\r\n                                <div className=\"inputDiv\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        maxLength=\"15\"\r\n                                        minLength=\"3\"\r\n                                        pattern=\"^[a-zA-Z\\\\s ]*$\"\r\n                                        name=\"name\"\r\n                                        value={subCategory.name}\r\n                                        onChange={(e) =>\r\n                                            handleChangeSUBInfo({\r\n                                                name: e.target.name,\r\n                                                value:\r\n                                                    e.target.value.charAt(0).toUpperCase() +\r\n                                                    e.target.value.slice(1),\r\n                                            })\r\n                                        }\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                    ></input>\r\n                                    <label htmlFor=\"name\">Category Name</label>\r\n                                </div>\r\n                                <button\r\n                                    disabled={!subCatValid}\r\n                                    onClick={handleAddSubCat}\r\n                                    type=\"button\"\r\n                                >\r\n                                    ADD\r\n                                </button>\r\n                            </section>\r\n                        </div>\r\n                    )\r\n                        :\r\n                        <ul>\r\n                            {categoryObject.subCategories.map((e) => (\r\n                                <li key={e.name}>\r\n                                    <ImageLoader\r\n                                        url={URL.createObjectURL(dataURLtoFile('data:image/png;base64,' + e.image?.base64, e.image?.name))}\r\n                                        alt={e.name}\r\n                                        backupUrl=\"/assets/imgs/404/category404.png\"\r\n                                        backupAlt={e.name || \"SubCategory\"}\r\n                                    ></ImageLoader>\r\n                                    <p>{e.name}</p>\r\n                                    <button onClick={() => handleRemoveSubCat(e.name)} type=\"button\">\r\n                                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M12 12h2v12h-2zm6 0h2v12h-2z\" /><path fill=\"currentColor\" d=\"M4 6v2h2v20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8h2V6zm4 22V8h16v20zm4-26h8v2h-8z\" /></svg>\r\n                                    </button>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    }\r\n                </div>\r\n                <div className=\"crDiv createMAN\">\r\n                    <h3 className=\"subTitle\">\r\n                        Manufacturers\r\n                        <button type=\"button\" onClick={handleToggleMan}>\r\n                            {!crMan ? (\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"32\"\r\n                                    height=\"32\"\r\n                                    viewBox=\"0 0 32 32\"\r\n                                >\r\n                                    <path\r\n                                        fill=\"currentColor\"\r\n                                        d=\"M30 24h-4v-4h-2v4h-4v2h4v4h2v-4h4z\"\r\n                                    />\r\n                                    <path\r\n                                        fill=\"currentColor\"\r\n                                        d=\"M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z\"\r\n                                    />\r\n                                </svg>\r\n                            ) : (\r\n                                <svg\r\n                                    xmlns=\"http://www.w3.org/2000/svg\"\r\n                                    width=\"32\"\r\n                                    height=\"32\"\r\n                                    viewBox=\"0 0 32 32\"\r\n                                >\r\n                                    <path\r\n                                        fill=\"currentColor\"\r\n                                        d=\"M30 21.4L28.6 20L25 23.6L21.4 20L20 21.4l3.6 3.6l-3.6 3.6l1.4 1.4l3.6-3.6l3.6 3.6l1.4-1.4l-3.6-3.6z\"\r\n                                    />\r\n                                    <path\r\n                                        fill=\"currentColor\"\r\n                                        d=\"M15.4 30L5 23.8c-.6-.4-1-1-1-1.7V9.9c0-.7.4-1.4 1-1.7l10-5.9c.3-.2.6-.3 1-.3s.7.1 1 .3l10 5.9c.6.4 1 1 1 1.7V16h-2V9.9L16 4L6 9.9v12.2l10.5 6.2l-1.1 1.7z\"\r\n                                    />\r\n                                </svg>\r\n                            )}\r\n                        </button>\r\n                    </h3>\r\n                    {crMan ? (\r\n                        <div className=\"manDiv\">\r\n                            <PhotoPicker\r\n                                image={manufacturer.image}\r\n                                setImage={handleChangeMNInfo}\r\n                                imageName={\"image\"}\r\n                            ></PhotoPicker>\r\n                            <section className=\"titleSubmit\">\r\n                                <div className=\"inputDiv\">\r\n                                    <input\r\n                                        type=\"text\"\r\n                                        maxLength=\"15\"\r\n                                        minLength=\"3\"\r\n                                        pattern=\"^[a-zA-Z\\\\s ]*$\"\r\n                                        name=\"name\"\r\n                                        value={manufacturer.name}\r\n                                        onChange={(e) =>\r\n                                            handleChangeMNInfo({\r\n                                                name: e.target.name,\r\n                                                value:\r\n                                                    e.target.value.charAt(0).toUpperCase() +\r\n                                                    e.target.value.slice(1),\r\n                                            })\r\n                                        }\r\n                                        placeholder=\"\"\r\n                                        required\r\n                                    ></input>\r\n                                    <label htmlFor=\"name\">Category Name</label>\r\n                                </div>\r\n                                <button\r\n                                    disabled={!manufacturerValid}\r\n                                    onClick={handleAddManufacturer}\r\n                                    type=\"button\"\r\n                                >\r\n                                    ADD\r\n                                </button>\r\n                            </section>\r\n                        </div>\r\n                    )\r\n                        :\r\n                        <ul>\r\n                            {categoryObject.manufacturers.map((e) => (\r\n                                <li key={e.name}>\r\n                                    <ImageLoader\r\n                                        url={e.image}\r\n                                        alt={e.name}\r\n                                        backupUrl=\"/assets/imgs/404/category404.png\"\r\n                                        backupAlt={e.name || \"Manufacturer\"}\r\n                                    ></ImageLoader>\r\n                                    <p>{e.name}</p>\r\n                                    <button onClick={() => handleRemoveMan(e.name)} type=\"button\"><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M12 12h2v12h-2zm6 0h2v12h-2z\" /><path fill=\"currentColor\" d=\"M4 6v2h2v20a2 2 0 0 0 2 2h16a2 2 0 0 0 2-2V8h2V6zm4 22V8h16v20zm4-26h8v2h-8z\" /></svg></button>\r\n                                </li>\r\n                            ))}\r\n                        </ul>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AdminCategories\r\n","import React from 'react'\r\nimport { NavLink } from \"react-router-dom\"\r\nimport ImageLoader from \"../../ImageLoader/ImageLoader\"\r\n\r\nexport function SmallCategory(props) {\r\n    return (\r\n        <li>\r\n            <NavLink to={`/subcategory/${props.subcategory.id}`}>\r\n                <ImageLoader\r\n                    url={props.subcategory.image}\r\n                    alt={props.subcategory.name}\r\n                    backupUrl=\"/assets/imgs/404/category404.png\"\r\n                    backupAlt={props.subcategory.name || 'Sub-Category'}\r\n                ></ImageLoader>\r\n                <div>\r\n                    <h4>{props.subcategory.name}</h4>\r\n                    <p>({props.subcategory.products?.length} Products)</p>\r\n                </div>\r\n            </NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport function BiggerCategory(props) {\r\n    return (\r\n        <li>\r\n            <NavLink to={`/category/${props.category.id}`}>\r\n                <ImageLoader\r\n                    url={props.category.image}\r\n                    alt={props.category.name}\r\n                    backupUrl=\"/assets/imgs/404/category404.png\"\r\n                    backupAlt={props.category.name || 'Sub-Category'}\r\n                ></ImageLoader>\r\n                <div>\r\n                    <h4>{props.category.name}</h4>\r\n                    <p>({props.category.subcategories.length} Categories)</p>\r\n                </div>\r\n            </NavLink>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport function AdminSmallCategory(props) {\r\n    return (\r\n        <li>\r\n            <button onClick={props.handleClick}>\r\n                <ImageLoader\r\n                    url={props.subcategory.image}\r\n                    alt={props.subcategory.name}\r\n                    backupUrl=\"/assets/imgs/404/category404.png\"\r\n                    backupAlt={props.subcategory.name || 'Sub-Category'}\r\n                ></ImageLoader>\r\n                <div>\r\n                    <h4>{props.subcategory.name}</h4>\r\n                    <p>({props.subcategory.products.length} Products)</p>\r\n                </div>\r\n            </button>\r\n        </li>\r\n    )\r\n}\r\n\r\nexport function AdminBiggerCategory(props) {\r\n    return (\r\n        <li>\r\n            <button onClick={() => props.selectCategory(props.category.id)}>\r\n                <ImageLoader\r\n                    url={props.category.image}\r\n                    alt={props.category.name}\r\n                    backupUrl=\"/assets/imgs/404/category404.png\"\r\n                    backupAlt={props.category.name || 'Sub-Category'}\r\n                ></ImageLoader>\r\n                <div>\r\n                    <h4>{props.category.name}</h4>\r\n                    <p>({props?.category?.subcategories?.length || 0} Categories)</p>\r\n                </div>\r\n            </button>\r\n        </li>\r\n    )\r\n}"],"names":["EditCreateCategory","_ref","category","updateCategory","categoryObject","setCategoryObject","useState","name","image","icon","handleChangeInfo","_ref2","value","_jsxs","className","onSubmit","e","preventDefault","children","_jsx","PhotoPicker","setImage","imageName","type","maxLength","minLength","pattern","onChange","target","charAt","toUpperCase","slice","placeholder","htmlFor","disabled","CreateCategory","_ref3","categories","createCategory","useCreateCategory","manufacturers","subCategories","subCategory","setSubCategory","description","manufacturer","setManufacturer","subCatValid","setSubCatValid","manufacturerValid","setManufacturerValid","categoryValid","setCategoryValid","crSubCat","setCrSubCat","crMan","setMan","handleChangeCategoryInfo","_ref4","handleChangeSUBInfo","_ref5","handleChangeMNInfo","_ref6","useEffect","isSubCatNameInArray","some","subCat","isSubCatEmpty","length","isManufacturerNameInArray","man","isManufacturerEmpty","isCategoryNameUnique","isImageAndIconNotNull","mapCategory","subcategories","map","subcategory","categoryId","mappedCategory","mappedCat","console","log","required","onClick","resetAll","handleToggleSubCat","xmlns","width","height","viewBox","fill","d","handleAddSubCat","_e$image","_e$image2","ImageLoader","url","URL","createObjectURL","dataURLtoFile","base64","alt","backupUrl","backupAlt","filter","c","handleRemoveSubCat","handleToggleMan","handleAddManufacturer","handleRemoveMan","currentCategoryId","setCurrentCategoryId","inputCategoryId","setInputCategoryId","showEdit","setShowEdit","shouldDelete","setShouldDelete","shouldCreate","setShouldCreate","popularProducts","setPopularProducts","setManufacturers","useUpdateCategory","deleteCategory","useDeleteCategory","data","categoriesData","error","categoriesError","isError","isCatError","isPending","isCatPending","isSuccess","catSuccess","refetch","catRefetch","useQuery","queryKey","queryFn","getCategories","cCatData","cCatError","isCCatError","isCCatPending","cCatSuccess","cCatRefetch","getCategoryByID","extractAndSortProductsFromCategory","getUniqueManufacturers","timer","setTimeout","clearTimeout","id","handleSelectCategory","handleToggleCreate","LoadingErrorDiv","classTitle","errorMessage","message","loadMessage","_Fragment","AdminBiggerCategory","selectCategory","handleSearchCat","handleEdit","concat","handleDelete","NavLink","to","SmallCategory","props","_props$subcategory$pr","products","BiggerCategory","AdminSmallCategory","handleClick","_props$category","_props$category$subca"],"sourceRoot":""}