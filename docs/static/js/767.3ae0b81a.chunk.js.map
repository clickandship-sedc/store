{"version":3,"file":"static/js/767.3ae0b81a.chunk.js","mappings":"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","sources":["components/AccountDropDown/AccountDropDown.jsx","components/Notification/Notification.jsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport { setShowAccDropDown } from \"../../store/slices/dropdowns/acDropDownSlice\"\r\nimport { NavLink } from \"react-router-dom\"\r\nimport { useLogin, useRegister } from \"../../helpers/UserHelper/UserHelper\"\r\nimport { isInfoValid, passwordInfoValidity, userInfoValidity } from \"../UsefullComponents/Usefull\"\r\nimport { LoginNotification } from \"../Notification/Notification\"\r\n\r\nfunction AccountDropDown() {\r\n    const dispatch = useDispatch()\r\n    const login = useLogin()\r\n    const register = useRegister()\r\n    const csstransitionRef = useRef()\r\n    const showDropDown = useSelector((state) => state.acDropDown.showAccDropDown)\r\n    const isMobile = useSelector((state) => state.mobile.isMobile)\r\n\r\n    const [currentMode, setCurrentMode] = useState(`${isMobile ? \"default\" : 'logIn'}`)\r\n\r\n    const [username, setUsername] = useState('')\r\n    const [password, setPassword] = useState('')\r\n    const [infoValid, setInfoValid] = useState(false)\r\n    const [registerInfo, setRegisterInfo] = useState({ password: '', cpassword: '', username: '', email: '', firstName: '', lastName: '' })\r\n    const [registerInfoValid, setRegisterInfoValid] = useState(false)\r\n    const [recoveryEmail, setRecoveryEmail] = useState('')\r\n    const [recoveryEmailValid, setRecoveryEmailValid] = useState(false)\r\n\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [showConfirmpassword, setShowConfirmpassword] = useState(false)\r\n    const [showNewPassword, setShowNewPassword] = useState(false)\r\n\r\n    useEffect(() => {\r\n        if (showDropDown) {\r\n            csstransitionRef.current.showModal()\r\n        }\r\n        if (currentMode === 'logIn' && !isMobile) {\r\n            setCurrentMode(\"default\")\r\n        } else if (currentMode === 'default' && isMobile) {\r\n            setCurrentMode(\"logIn\")\r\n        }\r\n    }, [showDropDown, isMobile, currentMode])\r\n\r\n    useEffect(() => {\r\n        if (username && password) {\r\n            setInfoValid(isInfoValid(passwordInfoValidity, { username: username, password: password }, [\"password\", \"username\"]))\r\n        } else {\r\n            setInfoValid(false)\r\n        }\r\n    }, [username, password])\r\n\r\n    useEffect(() => {\r\n        if (recoveryEmail) {\r\n            setRecoveryEmailValid(isInfoValid(userInfoValidity, { email: recoveryEmail }, [\"email\"]))\r\n        } else {\r\n            setRecoveryEmailValid(false)\r\n        }\r\n    }, [recoveryEmail])\r\n\r\n    useEffect(() => {\r\n        if (registerInfo && registerInfo?.password && registerInfo?.username && registerInfo?.email) {\r\n            const registerPassUssValid = isInfoValid(passwordInfoValidity, { password: registerInfo.password, username: registerInfo.username, cpassword: registerInfo.cpassword }, [\"password\", \"username\", \"cpassword\"])\r\n            const registerEmailValid = isInfoValid(userInfoValidity, { email: registerInfo.email, firstName: registerInfo.firstName, lastName: registerInfo.lastName }, [\"email\", \"firstName\", \"lastName\"])\r\n            setRegisterInfoValid(registerEmailValid && registerPassUssValid && (registerInfo.password === registerInfo.cpassword))\r\n        } else {\r\n            setRegisterInfoValid(false)\r\n        }\r\n    }, [registerInfo])\r\n\r\n    const handleCloseLogin = () => {\r\n        dispatch(setShowAccDropDown(false))\r\n    }\r\n\r\n    const handleForgotPassword = () => {\r\n        setCurrentMode(\"forgotPass\")\r\n    }\r\n\r\n    const handleSignUp = (e) => {\r\n        if (currentMode === \"default\" || currentMode === \"logIn\") {\r\n            e.preventDefault()\r\n            setCurrentMode(\"createAccount\")\r\n        } else if (currentMode === \"createAccount\") {\r\n            if (registerInfoValid) {\r\n                e.preventDefault()\r\n                e.preventDefault()\r\n                let tempRegisterInfo = {\r\n                    Username: registerInfo.username,\r\n                    Password: registerInfo.password,\r\n                    ConfirmationPassword: registerInfo.cpassword,\r\n                    Email: registerInfo.email,\r\n                    PhoneNumber: '',\r\n                    FirstName: registerInfo.firstName,\r\n                    LastName: registerInfo.lastName,\r\n                    Address: '',\r\n                    City: '',\r\n                    PostalCode: ''\r\n                }\r\n                register(tempRegisterInfo)\r\n                if (isMobile) {\r\n                    setCurrentMode(\"logIn\")\r\n                } else {\r\n                    setCurrentMode(\"default\")\r\n                }\r\n                setRegisterInfo({ password: '', cpassword: '', username: '', email: '', firstName: '', lastName: '' })\r\n            }\r\n        }\r\n    }\r\n\r\n    const handleCancel = () => {\r\n        if (isMobile) {\r\n            setCurrentMode(\"logIn\")\r\n        } else {\r\n            setCurrentMode(\"default\")\r\n        }\r\n    }\r\n\r\n    const handleSignIn = async (e) => {\r\n        if (username.length >= 4 && password.length >= 8) {\r\n            e.preventDefault()\r\n            const loginStatus = await login({ username: username, password: password })\r\n            if(loginStatus){\r\n                handleCloseLogin()\r\n            }\r\n            setUsername('')\r\n            setPassword('')\r\n        }\r\n    }\r\n\r\n    const handleSendCode = (e) => {\r\n        e.preventDefault()\r\n    }\r\n\r\n    const handleRegisterInfoChange = (e) => {\r\n        let tempRegisterInfo = { ...registerInfo }\r\n        tempRegisterInfo[e.target.name] = e.target.value\r\n        setRegisterInfo(tempRegisterInfo)\r\n    }\r\n\r\n    const recoveryChange = (e) => {\r\n        setRecoveryEmail(e.target.value)\r\n    }\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={showDropDown}\r\n            timeout={250}\r\n            classNames=\"loginDropdown\"\r\n            unmountOnExit\r\n            nodeRef={csstransitionRef}\r\n        >\r\n            <dialog className={`loginDropdown ${isMobile && \"mobileLoginDP\"}`} ref={csstransitionRef}>\r\n                <button className=\"closeLoginButton\" onClick={handleCloseLogin}>\r\n                    <svg\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                        width=\"32\"\r\n                        height=\"32\"\r\n                        viewBox=\"0 0 32 32\"\r\n                    >\r\n                        <path\r\n                            fill=\"currentColor\"\r\n                            d=\"M17.414 16L26 7.414L24.586 6L16 14.586L7.414 6L6 7.414L14.586 16L6 24.586L7.414 26L16 17.414L24.586 26L26 24.586L17.414 16z\"\r\n                        />\r\n                    </svg>\r\n                </button>\r\n                {(currentMode === \"default\" || currentMode === \"logIn\") && <form className=\"loginUi\" onSubmit={handleSignIn}>\r\n                    <h1>Sign <span>In</span></h1>\r\n\r\n                    <div className=\"loginIcons\">\r\n                        <p>Or sign up with</p>\r\n                        <div>\r\n                            <a href=\"www.google.com\" target=\"_blank\"\r\n                                rel=\"noreferrer noopener\">\r\n                                <svg viewBox=\"0 0 256 256\">\r\n                                    <path\r\n                                        fill=\"#1877F2\"\r\n                                        d=\"M256 128C256 57.308 198.692 0 128 0C57.308 0 0 57.307 0 128c0 63.888 46.808 116.843 108 126.445V165H75.5v-37H108V99.8c0-32.08 19.11-49.8 48.347-49.8C170.352 50 185 52.5 185 52.5V84h-16.14C152.958 84 148 93.867 148 103.99V128h35.5l-5.675 37H148v89.445c61.192-9.602 108-62.556 108-126.445\"\r\n                                    />\r\n                                    <path\r\n                                        fill=\"#FFF\"\r\n                                        d=\"m177.825 165l5.675-37H148v-24.01C148 93.866 152.959 84 168.86 84H185V52.5S170.352 50 156.347 50C127.11 50 108 67.72 108 99.8V128H75.5v37H108v89.445A128.959 128.959 0 0 0 128 256a128.9 128.9 0 0 0 20-1.555V165h29.825\"\r\n                                    />\r\n                                </svg>\r\n                            </a>\r\n                            <a href=\"www.google.com\" target=\"_blank\"\r\n                                rel=\"noreferrer noopener\">\r\n                                <svg viewBox=\"0 0 128 128\">\r\n                                    <path\r\n                                        fill=\"#fff\"\r\n                                        d=\"M44.59 4.21a63.28 63.28 0 0 0 4.33 120.9a67.6 67.6 0 0 0 32.36.35a57.13 57.13 0 0 0 25.9-13.46a57.44 57.44 0 0 0 16-26.26a74.33 74.33 0 0 0 1.61-33.58H65.27v24.69h34.47a29.72 29.72 0 0 1-12.66 19.52a36.16 36.16 0 0 1-13.93 5.5a41.29 41.29 0 0 1-15.1 0A37.16 37.16 0 0 1 44 95.74a39.3 39.3 0 0 1-14.5-19.42a38.31 38.31 0 0 1 0-24.63a39.25 39.25 0 0 1 9.18-14.91A37.17 37.17 0 0 1 76.13 27a34.28 34.28 0 0 1 13.64 8q5.83-5.8 11.64-11.63c2-2.09 4.18-4.08 6.15-6.22A61.22 61.22 0 0 0 87.2 4.59a64 64 0 0 0-42.61-.38z\"\r\n                                    />\r\n                                    <path\r\n                                        fill=\"#e33629\"\r\n                                        d=\"M44.59 4.21a64 64 0 0 1 42.61.37a61.22 61.22 0 0 1 20.35 12.62c-2 2.14-4.11 4.14-6.15 6.22Q95.58 29.23 89.77 35a34.28 34.28 0 0 0-13.64-8a37.17 37.17 0 0 0-37.46 9.74a39.25 39.25 0 0 0-9.18 14.91L8.76 35.6A63.53 63.53 0 0 1 44.59 4.21z\"\r\n                                    />\r\n                                    <path\r\n                                        fill=\"#f8bd00\"\r\n                                        d=\"M3.26 51.5a62.93 62.93 0 0 1 5.5-15.9l20.73 16.09a38.31 38.31 0 0 0 0 24.63q-10.36 8-20.73 16.08a63.33 63.33 0 0 1-5.5-40.9z\"\r\n                                    />\r\n                                    <path\r\n                                        fill=\"#587dbd\"\r\n                                        d=\"M65.27 52.15h59.52a74.33 74.33 0 0 1-1.61 33.58a57.44 57.44 0 0 1-16 26.26c-6.69-5.22-13.41-10.4-20.1-15.62a29.72 29.72 0 0 0 12.66-19.54H65.27c-.01-8.22 0-16.45 0-24.68z\"\r\n                                    />\r\n                                    <path\r\n                                        fill=\"#319f43\"\r\n                                        d=\"M8.75 92.4q10.37-8 20.73-16.08A39.3 39.3 0 0 0 44 95.74a37.16 37.16 0 0 0 14.08 6.08a41.29 41.29 0 0 0 15.1 0a36.16 36.16 0 0 0 13.93-5.5c6.69 5.22 13.41 10.4 20.1 15.62a57.13 57.13 0 0 1-25.9 13.47a67.6 67.6 0 0 1-32.36-.35a63 63 0 0 1-23-11.59A63.73 63.73 0 0 1 8.75 92.4z\"\r\n                                    />\r\n                                </svg>\r\n                            </a>\r\n                            <a href=\"www.google.com\" target=\"_blank\"\r\n                                rel=\"noreferrer noopener\">\r\n                                <svg viewBox=\"0 0 256 256\">\r\n                                    <g fill=\"none\">\r\n                                        <rect width=\"256\" height=\"256\" fill=\"#0A66C2\" rx=\"60\" />\r\n                                        <path\r\n                                            fill=\"#fff\"\r\n                                            d=\"M184.715 217.685h29.27a4 4 0 0 0 4-3.999l.015-61.842c0-32.323-6.965-57.168-44.738-57.168c-14.359-.534-27.9 6.868-35.207 19.228a.32.32 0 0 1-.595-.161V101.66a4 4 0 0 0-4-4h-27.777a4 4 0 0 0-4 4v112.02a4 4 0 0 0 4 4h29.268a4 4 0 0 0 4-4v-55.373c0-15.657 2.97-30.82 22.381-30.82c19.135 0 19.383 17.916 19.383 31.834v54.364a4 4 0 0 0 4 4ZM38 59.627c0 11.865 9.767 21.627 21.632 21.627c11.862-.001 21.623-9.769 21.623-21.631C81.253 47.761 71.491 38 59.628 38C47.762 38 38 47.763 38 59.627Zm6.959 158.058h29.307a4 4 0 0 0 4-4V101.66a4 4 0 0 0-4-4H44.959a4 4 0 0 0-4 4v112.025a4 4 0 0 0 4 4Z\"\r\n                                        />\r\n                                    </g>\r\n                                </svg>\r\n                            </a>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"fields\">\r\n                        <div className=\"uname\">\r\n                            <input\r\n                                className=\"uname\"\r\n                                name=\"username\"\r\n                                type=\"text\"\r\n                                maxLength=\"22\"\r\n                                minLength=\"4\"\r\n                                title=\"Must not contain spaces and/or special characters\"\r\n                                required\r\n                                pattern=\"^[a-zA-Z0-9]*$\"\r\n                                value={username}\r\n                                onChange={(e) => setUsername(e.target.value)}\r\n                                placeholder=\"\"\r\n                            ></input>\r\n                            <label htmlFor=\"username\">Enter username</label>\r\n                        </div>\r\n\r\n                        <div className=\"pass\">\r\n                            <input\r\n                                type={showPassword ? \"text\" : \"password\"}\r\n                                className=\"password\"\r\n                                // type=\"password\"\r\n                                maxLength=\"25\"\r\n                                minLength=\"8\"\r\n                                title=\"Must contain at least one number and one uppercase and lowercase letter, and at least one special character\"\r\n                                pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&^#\\$])[A-Za-z\\d@$!%*?&^#\\$]*$\"\r\n                                required\r\n                                value={password} onChange={(e) => setPassword(e.target.value)}\r\n                                placeholder=\"\"\r\n                            ></input>\r\n                            <label htmlFor=\"password\">Enter password</label>\r\n                            <span className={showPassword ? 'active' : ''} onClick={() => setShowPassword(!showPassword)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M30.94 15.66A16.69 16.69 0 0 0 16 5A16.69 16.69 0 0 0 1.06 15.66a1 1 0 0 0 0 .68A16.69 16.69 0 0 0 16 27a16.69 16.69 0 0 0 14.94-10.66a1 1 0 0 0 0-.68ZM16 25c-5.3 0-10.9-3.93-12.93-9C5.1 10.93 10.7 7 16 7s10.9 3.93 12.93 9C26.9 21.07 21.3 25 16 25Z\" /><path fill=\"currentColor\" d=\"M16 10a6 6 0 1 0 6 6a6 6 0 0 0-6-6Zm0 10a4 4 0 1 1 4-4a4 4 0 0 1-4 4Z\" /></svg></span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <button className=\"forgotPassButton\" type=\"button\" onClick={handleForgotPassword}>Forgot Password</button>\r\n\r\n                    {isMobile ? <div className=\"buttonsDiv\">\r\n                        <button className=\"signInButton\" disabled={!infoValid} onClick={handleSignIn}>Sign in</button>\r\n                        <button type=\"button\" className=\"signUpButton\" onClick={handleSignUp}>Sign up</button>\r\n                    </div> : <button className=\"signInButton\" disabled={!infoValid} onClick={handleSignIn}>Sign in</button>}\r\n                </form>}\r\n                {currentMode === \"forgotPass\" && <form onSubmit={handleSendCode} className={`forgotPass ${currentMode === 'forgotPass' && \"current\"}`}>\r\n                    <button className=\"cancelFP\" type=\"button\" onClick={handleCancel}>\r\n                        <svg viewBox=\"0 0 48 48\" fill=\"currentColor\">\r\n                            <g>\r\n                                <g>\r\n                                    <path\r\n                                        d=\"M8.532,18.531l8.955-8.999c-0.244-0.736-0.798-1.348-1.54-1.653c-1.01-0.418-2.177-0.185-2.95,0.591L1.047,20.479\r\n    c-1.396,1.402-1.396,3.67,0,5.073l11.949,12.01c0.771,0.775,1.941,1.01,2.951,0.592c0.742-0.307,1.295-0.918,1.54-1.652l-8.956-9\r\n    C6.07,25.027,6.071,21.003,8.532,18.531z\"\r\n                                    />\r\n                                    <path\r\n                                        d=\"M45.973,31.64c-1.396-5.957-5.771-14.256-18.906-16.01v-5.252c0-1.095-0.664-2.082-1.676-2.5\r\n    c-0.334-0.138-0.686-0.205-1.033-0.205c-0.705,0-1.398,0.276-1.917,0.796L10.49,20.479c-1.396,1.402-1.396,3.669-0.001,5.073\r\n    l11.95,12.009c0.517,0.521,1.212,0.797,1.92,0.797c0.347,0,0.697-0.066,1.031-0.205c1.012-0.418,1.676-1.404,1.676-2.5V30.57\r\n    c4.494,0.004,10.963,0.596,15.564,3.463c0.361,0.225,0.77,0.336,1.176,0.336c0.457,0,0.91-0.139,1.297-0.416\r\n    C45.836,33.429,46.18,32.515,45.973,31.64z\"\r\n                                    />\r\n                                </g>\r\n                            </g>\r\n                        </svg>\r\n                    </button>\r\n                    <h1>\r\n                        Forgot <span>Password</span>\r\n                    </h1>\r\n                    <p>\r\n                        Please enter your <span>email</span>\r\n                    </p>\r\n                    <div className=\"fields\">\r\n                        <div className=\"email\">\r\n                            <input\r\n                                type=\"email\"\r\n                                name=\"email\"\r\n                                pattern=\"^[a-zA-Z0-9+._]+@[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\r\n                                maxLength=\"40\"\r\n                                minLength=\"9\"\r\n                                required\r\n                                placeholder=\"\"\r\n                                onChange={recoveryChange}\r\n                            ></input>\r\n                            <label htmlFor=\"email\">Enter email</label>\r\n                        </div>\r\n                    </div>\r\n                    <button disabled={!recoveryEmailValid} className=\"sendCodeButton\">Send Code</button>\r\n                </form>}\r\n                {(currentMode === \"default\" || currentMode === \"createAccount\") && <form onSubmit={handleSignUp} className={`registerUi ${currentMode === 'createAccount' && \"current\"}`}>\r\n                    {currentMode === \"createAccount\" && (\r\n                        <button type=\"button\" className=\"cancel\" onClick={handleCancel}>\r\n                            <svg viewBox=\"0 0 48 48\" fill=\"currentColor\">\r\n                                <g>\r\n                                    <g>\r\n                                        <path\r\n                                            d=\"M8.532,18.531l8.955-8.999c-0.244-0.736-0.798-1.348-1.54-1.653c-1.01-0.418-2.177-0.185-2.95,0.591L1.047,20.479\r\n    c-1.396,1.402-1.396,3.67,0,5.073l11.949,12.01c0.771,0.775,1.941,1.01,2.951,0.592c0.742-0.307,1.295-0.918,1.54-1.652l-8.956-9\r\n    C6.07,25.027,6.071,21.003,8.532,18.531z\"\r\n                                        />\r\n                                        <path\r\n                                            d=\"M45.973,31.64c-1.396-5.957-5.771-14.256-18.906-16.01v-5.252c0-1.095-0.664-2.082-1.676-2.5\r\n    c-0.334-0.138-0.686-0.205-1.033-0.205c-0.705,0-1.398,0.276-1.917,0.796L10.49,20.479c-1.396,1.402-1.396,3.669-0.001,5.073\r\n    l11.95,12.009c0.517,0.521,1.212,0.797,1.92,0.797c0.347,0,0.697-0.066,1.031-0.205c1.012-0.418,1.676-1.404,1.676-2.5V30.57\r\n    c4.494,0.004,10.963,0.596,15.564,3.463c0.361,0.225,0.77,0.336,1.176,0.336c0.457,0,0.91-0.139,1.297-0.416\r\n    C45.836,33.429,46.18,32.515,45.973,31.64z\"\r\n                                        />\r\n                                    </g>\r\n                                </g>\r\n                            </svg>\r\n                        </button>\r\n                    )}\r\n                    <h1>Create <span>account</span></h1>\r\n\r\n                    {!(currentMode === \"createAccount\") && <p>Don't have an account? Create one now, and unlock themes!</p>}\r\n                    {currentMode === \"createAccount\" && (<div className=\"fields\">\r\n                        <div className=\"inputGroup\">\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    maxLength=\"30\"\r\n                                    minLength=\"2\"\r\n                                    pattern=\"^[a-zA-Z\\\\s ]*$\"\r\n                                    name=\"firstName\"\r\n                                    value={registerInfo?.firstName}\r\n                                    required\r\n                                    placeholder=\"\"\r\n                                    onChange={handleRegisterInfoChange}\r\n                                ></input>\r\n                                <label htmlFor=\"firstName\">First Name</label>\r\n                            </div>\r\n                            <div>\r\n                                <input\r\n                                    type=\"text\"\r\n                                    maxLength=\"30\"\r\n                                    minLength=\"2\"\r\n                                    pattern=\"^[a-zA-Z\\\\s ]*$\"\r\n                                    name=\"lastName\"\r\n                                    value={registerInfo?.lastName}\r\n                                    required\r\n                                    placeholder=\"\"\r\n                                    onChange={handleRegisterInfoChange}\r\n                                ></input>\r\n                                <label htmlFor=\"lastName\">Last Name</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inputGroup\">\r\n                            <div className=\"uname\">\r\n                                <input\r\n                                    name=\"username\"\r\n                                    type=\"text\"\r\n                                    maxLength=\"22\"\r\n                                    minLength=\"4\"\r\n                                    title=\"Must not contain spaces and/or special characters\"\r\n                                    required\r\n                                    value={registerInfo?.username}\r\n                                    pattern=\"^[a-zA-Z0-9]*$\"\r\n                                    placeholder=\"\"\r\n                                    onChange={handleRegisterInfoChange}\r\n                                ></input>\r\n                                <label htmlFor=\"username\">Enter username</label>\r\n                            </div>\r\n                            <div className=\"email\">\r\n                                <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    pattern=\"^[a-zA-Z0-9+._]+@[a-zA-Z0-9]+\\.[a-zA-Z0-9]+$\"\r\n                                    maxLength=\"40\"\r\n                                    minLength=\"9\"\r\n                                    value={registerInfo?.email}\r\n                                    required\r\n                                    placeholder=\"\"\r\n                                    onChange={handleRegisterInfoChange}\r\n                                ></input>\r\n                                <label htmlFor=\"email\">Enter email</label>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"inputGroup\">\r\n                            <div className=\"pass\">\r\n                                <input\r\n                                    type={showNewPassword ? \"text\" : \"password\"}\r\n                                    name=\"password\"\r\n                                    maxLength=\"25\"\r\n                                    minLength=\"8\"\r\n                                    title=\"Must contain at least one number and one uppercase and lowercase letter, and at least one special character\"\r\n                                    pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&^#\\\\$=+_\\-*\\.])[A-Za-z\\d@$!%*?&^#\\\\$=+_\\-*\\.]*$\"\r\n                                    required\r\n                                    placeholder=\"\"\r\n                                    value={registerInfo?.password}\r\n                                    onChange={handleRegisterInfoChange}\r\n                                ></input>\r\n                                <label htmlFor=\"password\">Enter password</label>\r\n                                <span className={showNewPassword ? 'active' : ''} onClick={() => setShowNewPassword(!showNewPassword)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M30.94 15.66A16.69 16.69 0 0 0 16 5A16.69 16.69 0 0 0 1.06 15.66a1 1 0 0 0 0 .68A16.69 16.69 0 0 0 16 27a16.69 16.69 0 0 0 14.94-10.66a1 1 0 0 0 0-.68ZM16 25c-5.3 0-10.9-3.93-12.93-9C5.1 10.93 10.7 7 16 7s10.9 3.93 12.93 9C26.9 21.07 21.3 25 16 25Z\" /><path fill=\"currentColor\" d=\"M16 10a6 6 0 1 0 6 6a6 6 0 0 0-6-6Zm0 10a4 4 0 1 1 4-4a4 4 0 0 1-4 4Z\" /></svg></span>\r\n                            </div>\r\n                            <div className=\"pass\">\r\n                                <input\r\n                                    type={showConfirmpassword ? \"text\" : \"password\"}\r\n                                    name=\"cpassword\"\r\n                                    maxLength=\"25\"\r\n                                    minLength=\"8\"\r\n                                    title=\"Must contain at least one number and one uppercase and lowercase letter, and at least one special character\"\r\n                                    pattern=\"^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&^#\\\\$=+_\\-*\\.])[A-Za-z\\d@$!%*?&^#\\\\$=+_\\-*\\.]*$\"\r\n                                    required\r\n                                    placeholder=\"\"\r\n                                    value={registerInfo?.cpassword}\r\n                                    onChange={handleRegisterInfoChange}\r\n                                ></input>\r\n                                <label htmlFor=\"cpassword\">Confirm password</label>\r\n                                <span className={showConfirmpassword ? 'active' : ''} onClick={() => setShowConfirmpassword(!showConfirmpassword)}><svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M30.94 15.66A16.69 16.69 0 0 0 16 5A16.69 16.69 0 0 0 1.06 15.66a1 1 0 0 0 0 .68A16.69 16.69 0 0 0 16 27a16.69 16.69 0 0 0 14.94-10.66a1 1 0 0 0 0-.68ZM16 25c-5.3 0-10.9-3.93-12.93-9C5.1 10.93 10.7 7 16 7s10.9 3.93 12.93 9C26.9 21.07 21.3 25 16 25Z\" /><path fill=\"currentColor\" d=\"M16 10a6 6 0 1 0 6 6a6 6 0 0 0-6-6Zm0 10a4 4 0 1 1 4-4a4 4 0 0 1-4 4Z\" /></svg></span>\r\n                            </div>\r\n                        </div>\r\n                        <p className=\"eula\">By signing up you accept our <NavLink>Terms of Use </NavLink> &<NavLink> Privacy Policy</NavLink>.</p>\r\n                    </div>\r\n                    )}\r\n                    <button className=\"registerButton\" disabled={currentMode === \"createAccount\" && !registerInfoValid} onClick={handleSignUp}>Sign Up</button>\r\n                </form>}\r\n                <LoginNotification></LoginNotification>\r\n            </dialog>\r\n        </CSSTransition >\r\n    )\r\n}\r\n\r\nexport default AccountDropDown\r\n","import React, { useRef, useEffect } from \"react\"\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport { clearNotification, setShowNotification } from \"../../store/slices/notificationSlice/notificationSlice\"\r\n\r\nfunction Notification() {\r\n    const dispatch = useDispatch()\r\n    const notificationRef = useRef()\r\n    const showNotification = useSelector((state) => state.notification.showNotification)\r\n    const notificationTitle = useSelector((state) => state.notification.title)\r\n    const notificationSuccess = useSelector((state) => state.notification.success)\r\n    const notificationError = useSelector((state) => state.notification.error)\r\n\r\n    useEffect(() => {\r\n        if (showNotification) {\r\n            const timer = setTimeout(() => {\r\n                dispatch(setShowNotification(false))\r\n                dispatch(clearNotification())\r\n            }, 2700)\r\n\r\n            return () => {\r\n                clearTimeout(timer)\r\n            }\r\n        }\r\n    }, [showNotification, dispatch])\r\n\r\n    const handleNotificationClick = () => dispatch(setShowNotification(false))\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={!!(showNotification && notificationTitle)}\r\n            timeout={200}\r\n            classNames=\"notification\"\r\n            unmountOnExit\r\n            nodeRef={notificationRef}\r\n        >\r\n            <div ref={notificationRef} className={`notification ${notificationError ? \"errorNotify\" : \"successNotify\"}`} onClick={handleNotificationClick}>\r\n                <h3>\r\n                    {notificationError ?\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M16 2C8.2 2 2 8.2 2 16s6.2 14 14 14s14-6.2 14-14S23.8 2 16 2m0 26C9.4 28 4 22.6 4 16S9.4 4 16 4s12 5.4 12 12s-5.4 12-12 12\" /><path fill=\"currentColor\" d=\"M21.4 23L16 17.6L10.6 23L9 21.4l5.4-5.4L9 10.6L10.6 9l5.4 5.4L21.4 9l1.6 1.6l-5.4 5.4l5.4 5.4z\" /></svg>\r\n                        :\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"m14 21.414l-5-5.001L10.413 15L14 18.586L21.585 11L23 12.415z\" /><path fill=\"currentColor\" d=\"M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2m0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12\" /></svg>\r\n                    }\r\n                    <span>{notificationTitle}</span>\r\n                </h3>\r\n                <p>{notificationError || notificationSuccess}</p>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport function LoginNotification() {\r\n    const dispatch = useDispatch()\r\n    const loginnotificationRef = useRef()\r\n    const showNotification = useSelector((state) => state.notification.showNotification)\r\n    const notificationTitle = useSelector((state) => state.notification.title)\r\n    const notificationSuccess = useSelector((state) => state.notification.success)\r\n    const notificationError = useSelector((state) => state.notification.error)\r\n\r\n    useEffect(() => {\r\n        if (showNotification) {\r\n            const timer = setTimeout(() => {\r\n                dispatch(setShowNotification(false))\r\n                dispatch(clearNotification())\r\n            }, 2700)\r\n\r\n            return () => {\r\n                clearTimeout(timer)\r\n            }\r\n        }\r\n    }, [showNotification, dispatch])\r\n\r\n    const handleNotificationClick = () => {\r\n        dispatch(setShowNotification(false))\r\n        dispatch(clearNotification())\r\n    }\r\n\r\n    return (\r\n        <CSSTransition\r\n            in={!!(showNotification && notificationTitle)}\r\n            timeout={200}\r\n            classNames=\"notificationLogin\"\r\n            unmountOnExit\r\n            nodeRef={loginnotificationRef}\r\n        >\r\n            <div ref={loginnotificationRef} className={`notificationLogin ${notificationError ? \"errorNotify\" : \"successNotify\"}`} onClick={handleNotificationClick}>\r\n                <h3>\r\n                    {notificationError ?\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"M16 2C8.2 2 2 8.2 2 16s6.2 14 14 14s14-6.2 14-14S23.8 2 16 2m0 26C9.4 28 4 22.6 4 16S9.4 4 16 4s12 5.4 12 12s-5.4 12-12 12\" /><path fill=\"currentColor\" d=\"M21.4 23L16 17.6L10.6 23L9 21.4l5.4-5.4L9 10.6L10.6 9l5.4 5.4L21.4 9l1.6 1.6l-5.4 5.4l5.4 5.4z\" /></svg>\r\n                        :\r\n                        <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"32\" height=\"32\" viewBox=\"0 0 32 32\"><path fill=\"currentColor\" d=\"m14 21.414l-5-5.001L10.413 15L14 18.586L21.585 11L23 12.415z\" /><path fill=\"currentColor\" d=\"M16 2a14 14 0 1 0 14 14A14 14 0 0 0 16 2m0 26a12 12 0 1 1 12-12a12 12 0 0 1-12 12\" /></svg>\r\n                    }\r\n                    <span>{notificationTitle}</span>\r\n                </h3>\r\n                <p>{notificationError || notificationSuccess}</p>\r\n            </div>\r\n        </CSSTransition>\r\n    )\r\n}\r\n\r\nexport default Notification"],"names":["dispatch","useDispatch","login","useLogin","register","useRegister","csstransitionRef","useRef","showDropDown","useSelector","state","acDropDown","showAccDropDown","isMobile","mobile","currentMode","setCurrentMode","useState","concat","username","setUsername","password","setPassword","infoValid","setInfoValid","registerInfo","setRegisterInfo","cpassword","email","firstName","lastName","registerInfoValid","setRegisterInfoValid","recoveryEmail","setRecoveryEmail","recoveryEmailValid","setRecoveryEmailValid","showPassword","setShowPassword","showConfirmpassword","setShowConfirmpassword","showNewPassword","setShowNewPassword","useEffect","current","showModal","isInfoValid","passwordInfoValidity","userInfoValidity","registerPassUssValid","registerEmailValid","handleCloseLogin","setShowAccDropDown","handleSignUp","e","preventDefault","tempRegisterInfo","Username","Password","ConfirmationPassword","Email","PhoneNumber","FirstName","LastName","Address","City","PostalCode","handleCancel","handleSignIn","async","length","handleRegisterInfoChange","target","name","value","_jsx","CSSTransition","in","timeout","classNames","unmountOnExit","nodeRef","children","_jsxs","className","ref","onClick","xmlns","width","height","viewBox","fill","d","onSubmit","href","rel","rx","type","maxLength","minLength","title","required","pattern","onChange","placeholder","htmlFor","handleForgotPassword","disabled","NavLink","LoginNotification","loginnotificationRef","showNotification","notification","notificationTitle","notificationSuccess","success","notificationError","error","timer","setTimeout","setShowNotification","clearNotification","clearTimeout","handleNotificationClick","notificationRef"],"sourceRoot":""}